{"version":3,"mappings":"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","names":["Combobox","input","list","tabInsertsSuggestions","defaultFirstOption","event","keyboardBindings","trackComposition","commitWithElement","_a","visible","indexDiff","focusEl","els","focusIndex","indexOfItem","newIndex","target","el","scrollTo","combobox","commit","fireCommitEvent","container","inViewport","element","scrollTop","containerBottom","top","bottom","boundary","query","text","key","cursor","multiWord","lookBackIndex","lastMatchPosition","keyIndex","pre","CustomHTMLElement","InputStyleCloneUpdateEvent","CloneRegistry","_InputStyleCloneElement","__privateAdd","_InputStyleCloneElement_instances","_styleObserver","__privateMethod","updateStyles_fn","_resizeObserver","requestUpdateLayout_fn","_inputRef","_container","_xOffset","_yOffset","_isLayoutUpdating","_onInput","updateText_fn","_onDocumentScrollOrResize","usingInput_fn","clone","__privateSet","__privateGet","input_get","fn","updateLayout_fn","inputStyle","inputRect","cloneRect","prop","propertiesToCopy","InputStyleCloneElement","e","_InputRange","startOffset","endOffset","_InputRange_instances","_inputElement","_startOffset","_endOffset","selectionStart","selectionEnd","offset","clampOffset_fn","toStart","createCloneRange_fn","styleClone_get","cloneElement_get","range","textNode","InputRange","states","TextExpander","expander","match","menu","_b","position","caretRect","targetPosition","currentPosition","delta","currentStyle","item","beginning","remaining","detail","suffix","value","found","providers","provide","result","x","TextExpanderElement","keysAttr","keys","multiWordAttr","globalMultiWord","state","ansiRegex","onlyFirst","pattern","regex","stripAnsi","string","segmenter","stringLength","countAnsiEscapeCodes","length","_","poweredByGiphyURL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","import","supportedLanguagesMap","supportedLanguages","reduce","acc","l","code","common","native","expiryOptions","i18nDuration","expirySeconds","Object","oneDay","expiresInFromExpiresAt","expiresAt","Date","getTime","now","find","s","document","createElement","role","className","windowMargin","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","left","width","boundingClientRect","innerWidth","window","insetInlineStart","isRTL","style","observe","DEFAULT_LANG","localeMatch","Intl","DateTimeFormat","resolvedOptions","locale","navigator","languages","map","urlRegexObj","RegExp","urlRegex","source","flags","usernameRegex","urlPlaceholder","countableText","inputText","replace","USERNAME_RE","MENTION_RE","HASHTAG_RE","SHORTCODE_RE_FRAGMENT","SCAN_RE","Segmenter","escapeHTML","highlightText","maxCharacters","Infinity","composerCharacterCount","withinLimitHTML","exceedLimitHTML","htmlSegments","segment","index","RTF","mem","RelativeTimeFormat","undefined","LF","ListFormat","CUSTOM_EMOJIS_COUNT","ADD_LABELS","media","id","customEmoji","gif","poll","Compose","onClose","replyToStatus","editStatus","draftStatus","standalone","hasOpener","i18n","useLingui","rtf","lf","console","masto","instance","uiState","setUIState","useState","UID","uid","log","currentAccount","currentAccountInfo","maxMediaAttachments","charactersReservedPerUrl","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","maxCharactersPerOption","minExpiration","spoilerTextRef","useRef","textareaRef","store","prevLanguage","language","sensitive","setMediaAttachments","setLanguage","oninputTextarea","account","focusTextarea","dispatchEvent","setTimeout","spoilerText","useEffect","visibility2","language2","sensitive2","visibility","current","m","allMentions","prefs","setSensitive","poll2","mediaAttachments","options","expiresIn","statusSource","dataset","mediaAttachments2","setVisibility","composablePoll","status","o","formRef","canClose","hasValue","hasMediaAttachments","isSelf","hasOnlyAcct","confirmClose","hasIDMediaAttachments","beforeUnloadCopy","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","supportsCloseWatcher","useHotkeys","yes","addEventListener","capture","modals","hasModal","hasOnlyComposer","prevBackgroundDraft","count","escDownRef","ignoreEventWhen","useCloseWatcher","draftKey","getCurrentAccountNS","backgroundDraft","useInterval","db","handleItems","username","acct","i2","items","unsupportedFiles","i18n2","drafts","set","updatedAt","f","debug","error","files","clipboardData","max","file","alert","mediaFiles","allowedFiles","1","2","handleDragover","setShowMentionPicker","showEmoji2Picker","showGIFPicker","useMemo","contentTranslationHideLanguages","autoDetectedLanguages","topLanguages","restLanguages","commonB","type","size","url","codeA","commonA","codeB","onMinimize","saveUnsavedDraft","gifPickerDisabled","onPollButtonClick","setPoll","removeEventListener","addSubToolbarRef","setShowAddButton","useResizeObserver","showMentionPicker","scrollWidth","settings","push","_jsxs","sort","_jsx","AccountBlock","showPollButton","pollButtonDisabled","children","class","confirmText","passData","__STATES__","opener","composerState","Icon","openCompose","showAddButton","avatarStatic","disabled","onClick","Status","replyToStatusMonthsAgo","Trans","formData","components","0","onKeyDown","onSubmit","description","params2","res","attachment","results","mediaPromises","hasNoDescriptions","params","removeNullUndefined","newStatus","saveStatus","i","e2","media_attributes","in_reply_to_id","statuses","visibilityIconsMap","opacity","pointerEvents","checked","onChange","icon","title","limit","action","setShowEmoji2Picker","setAutoDetectedLanguages","Textarea","ref","placeholder","fileID","newAttachments","attachments","_2","j","performSearch","q","v1","resolve","v2","fetch","onTrigger","defaultSearchTerm","Poll","newPoll","onDescriptionChange","Menu2","open","MenuItem","FilePickerInput","onInput","setShowGIFPicker","body","zIndex","_Fragment","Loader","CharCountMeter","alt","localeCode2Text","commonText","composerGIFPicker","restSupportedLanguages","textarea","textBeforeMention","spaceAfterMention","textAfterMention","newText","Modal","CustomEmojisModal","textBeforeEmoji","textAfterEmoji","spaceBeforeEmoji","emojiShortcode","spaceAfterEmoji","onSelect","GIFPickerModal","alt_text","slice","theToast","showToast","blob","newMediaAttachments","hidden","then","autoResizeTextarea","offsetHeight","scrollHeight","clientHeight","height","visibleEmojis","__vitePreload","langs","detectAll","lang","setText","textareaProps","searcherRef","getCustomEmojis","r","searcher","handleChange","text2","_getCustomEmojis","emojis","filter","Fuse","matchesArg","cacheKeyArg","emoji","detectLangs","shortcode","encodeHTML","forwardRef","html","props","textExpanderTextRef","history","displayNameWithEmoji","emojifyText","displayName","search","total","cur","name","shortenNumber","Promise","matched","v","more","textExpanderRef","handleValue","handleCommited","slowHighlightPerf","composeHighlightRef","start","end","debouncedAutoDetectLanguage","useDebouncedCallback","dom","mark","resizeObserver","throttleHighlightText","lastLine","bullet","postSpaces","anything","number","newBullet","pos","dir","rows","cols","charCount","leftChars","ctrlKey","setRangeText","setSelectionRange","scaleDimension","matrix","matrixLimit","scalingFactor","newHeight","newWidth","MediaAttachment","supportsEdit","supports","onScroll","configuration","getCurrentInstanceConfiguration","maxError","setMaxError","checkMaxError","snapStates","imageMatrix","Math","videoMatrix","setDescription","debouncedOnDescriptionChange","timer","details","setImageMatrix","setVideoMatrix","toastRef","showModal","imageSizeLimit2","descTextarea","prettyBytes","videoSize","videoSizeLimit2","videoMatrixLimit2","videoMatrix2","maxErrorToast","maxErrorText","err","imageSize","suffixType","naturalWidth","naturalHeight","3","videoWidth","videoHeight","values","setShowModal","src","onLoad","onLoadedMetadata","onRemove","subtype","response","menuButton","append","multiple","option","required","label","splice","str","char","obj","MentionModal","api","accounts","setAccounts","relationshipsMap","setRelationshipsMap","setSelectedIndex","accounts2","fetchRelationships","relationships","loadAccounts","inputRef","filterShortcodes","searchTerm","bLower","aStartsWith","bStartsWith","aContains","bothContain","bContains","socialAddress","selectedAccount","selectedIndex","selectAccount","listRef","selectedItem","loadRelationships","term","debouncedLoadAccounts","enableOnFormTags","relationship","customEmojisList","recentlyUsedCustomEmojis","customEmojisCatList","emojisCat","customEmojis","othersCat","matches","setMatches","_c","scrollableRef","onFind","onSelectEmoji","useCallback","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","emoji2","setCustomEmojis","category","queueMicrotask","CustomEmojisList","memo","setMax","CustomEmojiButton","showMore","showCode","parent","selfRect","rect","targetClassList","addEdges","GIFS_PER_PAGE","fetchGIFs","qRef","closest","currentTarget","remove","debouncedOnInput","onPointerEnter","staticUrl","decoding","setResults","currentOffset","images","fixed_height_small","fixed_height_downsampled","fixed_height","theImage","webp","urlObj","strippedURL","strippedWebP","preventDefault","original","theURL","mp4","url2","strippedURL2","webpObj","parse"],"ignoreList":[0,1,2,3,4],"sources":["../../node_modules/@github/combobox-nav/dist/index.js","../../node_modules/@github/text-expander-element/dist/index.js","../../node_modules/ansi-regex/index.js","../../node_modules/strip-ansi/index.js","../../node_modules/string-length/index.js","../../src/assets/powered-by-giphy.svg","../../src/components/compose.jsx"],"sourcesContent":["export default class Combobox {\n    constructor(input, list, { tabInsertsSuggestions, defaultFirstOption } = {}) {\n        this.input = input;\n        this.list = list;\n        this.tabInsertsSuggestions = tabInsertsSuggestions !== null && tabInsertsSuggestions !== void 0 ? tabInsertsSuggestions : true;\n        this.defaultFirstOption = defaultFirstOption !== null && defaultFirstOption !== void 0 ? defaultFirstOption : false;\n        this.isComposing = false;\n        if (!list.id) {\n            list.id = `combobox-${Math.random().toString().slice(2, 6)}`;\n        }\n        this.ctrlBindings = !!navigator.userAgent.match(/Macintosh/);\n        this.keyboardEventHandler = event => keyboardBindings(event, this);\n        this.compositionEventHandler = event => trackComposition(event, this);\n        this.inputHandler = this.clearSelection.bind(this);\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-controls', list.id);\n        input.setAttribute('aria-expanded', 'false');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-haspopup', 'listbox');\n    }\n    destroy() {\n        this.clearSelection();\n        this.stop();\n        this.input.removeAttribute('role');\n        this.input.removeAttribute('aria-controls');\n        this.input.removeAttribute('aria-expanded');\n        this.input.removeAttribute('aria-autocomplete');\n        this.input.removeAttribute('aria-haspopup');\n    }\n    start() {\n        this.input.setAttribute('aria-expanded', 'true');\n        this.input.addEventListener('compositionstart', this.compositionEventHandler);\n        this.input.addEventListener('compositionend', this.compositionEventHandler);\n        this.input.addEventListener('input', this.inputHandler);\n        this.input.addEventListener('keydown', this.keyboardEventHandler);\n        this.list.addEventListener('click', commitWithElement);\n        this.indicateDefaultOption();\n    }\n    stop() {\n        this.clearSelection();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.input.removeEventListener('compositionstart', this.compositionEventHandler);\n        this.input.removeEventListener('compositionend', this.compositionEventHandler);\n        this.input.removeEventListener('input', this.inputHandler);\n        this.input.removeEventListener('keydown', this.keyboardEventHandler);\n        this.list.removeEventListener('click', commitWithElement);\n    }\n    indicateDefaultOption() {\n        var _a;\n        if (this.defaultFirstOption) {\n            (_a = Array.from(this.list.querySelectorAll('[role=\"option\"]:not([aria-disabled=\"true\"])'))\n                .filter(visible)[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('data-combobox-option-default', 'true');\n        }\n    }\n    navigate(indexDiff = 1) {\n        const focusEl = Array.from(this.list.querySelectorAll('[aria-selected=\"true\"]')).filter(visible)[0];\n        const els = Array.from(this.list.querySelectorAll('[role=\"option\"]')).filter(visible);\n        const focusIndex = els.indexOf(focusEl);\n        if ((focusIndex === els.length - 1 && indexDiff === 1) || (focusIndex === 0 && indexDiff === -1)) {\n            this.clearSelection();\n            this.input.focus();\n            return;\n        }\n        let indexOfItem = indexDiff === 1 ? 0 : els.length - 1;\n        if (focusEl && focusIndex >= 0) {\n            const newIndex = focusIndex + indexDiff;\n            if (newIndex >= 0 && newIndex < els.length)\n                indexOfItem = newIndex;\n        }\n        const target = els[indexOfItem];\n        if (!target)\n            return;\n        for (const el of els) {\n            el.removeAttribute('data-combobox-option-default');\n            if (target === el) {\n                this.input.setAttribute('aria-activedescendant', target.id);\n                target.setAttribute('aria-selected', 'true');\n                scrollTo(this.list, target);\n            }\n            else {\n                el.removeAttribute('aria-selected');\n            }\n        }\n    }\n    clearSelection() {\n        this.input.removeAttribute('aria-activedescendant');\n        for (const el of this.list.querySelectorAll('[aria-selected=\"true\"]')) {\n            el.removeAttribute('aria-selected');\n        }\n        this.indicateDefaultOption();\n    }\n}\nfunction keyboardBindings(event, combobox) {\n    if (event.shiftKey || event.metaKey || event.altKey)\n        return;\n    if (!combobox.ctrlBindings && event.ctrlKey)\n        return;\n    if (combobox.isComposing)\n        return;\n    switch (event.key) {\n        case 'Enter':\n            if (commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Tab':\n            if (combobox.tabInsertsSuggestions && commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Escape':\n            combobox.clearSelection();\n            break;\n        case 'ArrowDown':\n            combobox.navigate(1);\n            event.preventDefault();\n            break;\n        case 'ArrowUp':\n            combobox.navigate(-1);\n            event.preventDefault();\n            break;\n        case 'n':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(1);\n                event.preventDefault();\n            }\n            break;\n        case 'p':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(-1);\n                event.preventDefault();\n            }\n            break;\n        default:\n            if (event.ctrlKey)\n                break;\n            combobox.clearSelection();\n    }\n}\nfunction commitWithElement(event) {\n    if (!(event.target instanceof Element))\n        return;\n    const target = event.target.closest('[role=\"option\"]');\n    if (!target)\n        return;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return;\n    fireCommitEvent(target);\n}\nfunction commit(input, list) {\n    const target = list.querySelector('[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]');\n    if (!target)\n        return false;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return true;\n    target.click();\n    return true;\n}\nfunction fireCommitEvent(target) {\n    target.dispatchEvent(new CustomEvent('combobox-commit', { bubbles: true }));\n}\nfunction visible(el) {\n    return (!el.hidden &&\n        !(el instanceof HTMLInputElement && el.type === 'hidden') &&\n        (el.offsetWidth > 0 || el.offsetHeight > 0));\n}\nfunction trackComposition(event, combobox) {\n    combobox.isComposing = event.type === 'compositionstart';\n    const list = document.getElementById(combobox.input.getAttribute('aria-controls') || '');\n    if (!list)\n        return;\n    combobox.clearSelection();\n}\nfunction scrollTo(container, target) {\n    if (!inViewport(container, target)) {\n        container.scrollTop = target.offsetTop;\n    }\n}\nfunction inViewport(container, element) {\n    const scrollTop = container.scrollTop;\n    const containerBottom = scrollTop + container.clientHeight;\n    const top = element.offsetTop;\n    const bottom = top + element.clientHeight;\n    return top >= scrollTop && bottom <= containerBottom;\n}\n","import Combobox from '@github/combobox-nav';\n\nconst boundary = /\\s|\\(|\\[/;\nfunction query(text, key, cursor, { multiWord, lookBackIndex, lastMatchPosition } = {\n    multiWord: false,\n    lookBackIndex: 0,\n    lastMatchPosition: null\n}) {\n    let keyIndex = text.lastIndexOf(key, cursor - 1);\n    if (keyIndex === -1)\n        return;\n    if (keyIndex < lookBackIndex)\n        return;\n    if (multiWord) {\n        if (lastMatchPosition != null) {\n            if (lastMatchPosition === keyIndex)\n                return;\n            keyIndex = lastMatchPosition - key.length;\n        }\n        const charAfterKey = text[keyIndex + 1];\n        if (charAfterKey === ' ' && cursor >= keyIndex + key.length + 1)\n            return;\n        const newLineIndex = text.lastIndexOf('\\n', cursor - 1);\n        if (newLineIndex > keyIndex)\n            return;\n        const dotIndex = text.lastIndexOf('.', cursor - 1);\n        if (dotIndex > keyIndex)\n            return;\n    }\n    else {\n        const spaceIndex = text.lastIndexOf(' ', cursor - 1);\n        if (spaceIndex > keyIndex)\n            return;\n    }\n    const pre = text[keyIndex - 1];\n    if (pre && !boundary.test(pre))\n        return;\n    const queryString = text.substring(keyIndex + key.length, cursor);\n    return {\n        text: queryString,\n        position: keyIndex + key.length\n    };\n}\n\n/**\n * A custom element is implemented as a class which extends HTMLElement (in the\n * case of autonomous elements) or the interface you want to customize (in the\n * case of customized built-in elements).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#custom_element_lifecycle_callbacks\n */\nclass CustomHTMLElement extends HTMLElement {\n}\n\nclass InputStyleCloneUpdateEvent extends Event {\n    constructor() {\n        super(\"update\");\n    }\n}\nconst CloneRegistry = new WeakMap();\n/**\n * Create an element that exactly matches an input pixel-for-pixel and automatically stays in sync with it. This\n * is a non-interactive overlay on to the input and can be used to affect the visual appearance of the input\n * without modifying its behavior. The clone element is hidden by default.\n *\n * This lower level API powers the `InputRange` but provides more advanced functionality including event updates.\n *\n * Emits `update` events whenever anything is recalculated: when the layout changes, when the user scrolls, when the\n * input is updated, etc. This event may be emitted more than once per change.\n *\n * @note There may be cases in which the clone cannot observe changes to the input and fails to automatically update.\n * For example, if the `value` property on the input is written to directly, no `input` event is emitted by the input\n * and the clone does not automatically update. In these cases, `forceUpdate` can be used to manually trigger an update.\n */\n// PRIOR ART: This approach was adapted from the following MIT-licensed sources:\n//  - primer/react (Copyright (c) 2018 GitHub, Inc.): https://github.com/primer/react/blob/a0db832302702b869aa22b0c4049ad9305ef631f/src/drafts/utils/character-coordinates.ts\n//  - component/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/component/textarea-caret-position/blob/b5db7a7e47dd149c2a66276183c69234e4dabe30/index.js\n//  - koddsson/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/koddsson/textarea-caret-position/blob/eba40ec8488eed4d77815f109af22e1d9c0751d3/index.js\nclass InputStyleCloneElement extends CustomHTMLElement {\n    #styleObserver = new MutationObserver(() => this.#updateStyles());\n    #resizeObserver = new ResizeObserver(() => this.#requestUpdateLayout());\n    // This class is unique in that it will prevent itself from getting garbage collected because of the subscribed\n    // observers (if never detached). Because of this, we want to avoid preventing the existence of this class from also\n    // preventing the garbage collection of the associated input. This also allows us to automatically detach if the\n    // input gets collected.\n    #inputRef;\n    #container;\n    /**\n     * Get the clone for an input, reusing an existing one if available. This avoids creating unecessary clones, which\n     * have a performance cost due to their high-frequency event-based updates. Because these elements are shared, they\n     * should be mutated with caution.\n     *\n     * Upon initial creation the clone element will automatically be inserted into the DOM and begin observing the\n     * linked input. Only one clone per input can ever exist at a time.\n     * @param input The target input to clone.\n     */\n    static for(input) {\n        let clone = CloneRegistry.get(input);\n        if (!clone) {\n            clone = new InputStyleCloneElement();\n            clone.connect(input);\n            CloneRegistry.set(input, clone);\n        }\n        return clone;\n    }\n    /**\n     * Connect this instance to a target input element and insert this instance into the DOM in the correct location.\n     *\n     * NOTE: calling the static `for` method is nearly always preferable as it will reuse an existing clone if available.\n     * However, if reusing clones is problematic (ie, if the clone needs to be mutated), a clone can be constructed\n     * directly with `new InputStyleCloneElement()` and then bound to an input and inserted into the DOM with\n     * `clone.connect(target)`.\n     */\n    connect(input) {\n        this.#inputRef = new WeakRef(input);\n        // We want position:absolute so it doesn't take space in the layout, but that doesn't work with display:table-cell\n        // used in the HTMLInputElement approach. So we need a wrapper.\n        this.#container = document.createElement(\"div\");\n        this.#container.style.position = \"absolute\";\n        this.#container.style.pointerEvents = \"none\";\n        input.after(this.#container);\n        this.#container.appendChild(this);\n    }\n    /**\n     * Force a recalculation. Will emit an `update` event. This is typically not needed unless the input has changed in\n     * an unobservable way, eg by directly writing to the `value` property.\n     */\n    forceUpdate() {\n        this.#updateStyles();\n        this.#updateText();\n    }\n    /** @private */\n    connectedCallback() {\n        this.#usingInput((input) => {\n            this.style.pointerEvents = \"none\";\n            this.style.userSelect = \"none\";\n            this.style.overflow = \"hidden\";\n            this.style.display = \"block\";\n            // Important not to use display:none which would not render the content at all\n            this.style.visibility = \"hidden\";\n            if (input instanceof HTMLTextAreaElement) {\n                this.style.whiteSpace = \"pre-wrap\";\n                this.style.wordWrap = \"break-word\";\n            }\n            else {\n                this.style.whiteSpace = \"nowrap\";\n                // text in single-line inputs is vertically centered\n                this.style.display = \"table-cell\";\n                this.style.verticalAlign = \"middle\";\n            }\n            this.setAttribute(\"aria-hidden\", \"true\");\n            this.#updateStyles();\n            this.#updateText();\n            this.#styleObserver.observe(input, {\n                attributeFilter: [\n                    \"style\",\n                    \"dir\", // users can right-click in some browsers to change the text direction dynamically\n                ],\n            });\n            this.#resizeObserver.observe(input);\n            document.addEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n            window.addEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n            // capture so this happens first, so other things can respond to `input` events after this data updates\n            input.addEventListener(\"input\", this.#onInput, { capture: true });\n        });\n    }\n    /** @private */\n    disconnectedCallback() {\n        this.#container?.remove();\n        this.#styleObserver.disconnect();\n        this.#resizeObserver.disconnect();\n        document.removeEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.removeEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        // Can't use `usingInput` here since that could infinitely recurse\n        const input = this.#input;\n        if (input) {\n            input.removeEventListener(\"input\", this.#onInput, { capture: true });\n            CloneRegistry.delete(input);\n        }\n    }\n    // --- private ---\n    get #input() {\n        return this.#inputRef?.deref();\n    }\n    /** Perform `fn` using the `input` if it is still available. If not, clean up the clone instead. */\n    #usingInput(fn) {\n        const input = this.#input;\n        if (!input)\n            return this.remove();\n        return fn(input);\n    }\n    /** Current relative x-adjustment in pixels, executed via CSS transform. */\n    #xOffset = 0;\n    /** Current relative y-adjustment in pixels, executed via CSS transform. */\n    #yOffset = 0;\n    /**\n     * Update only geometric properties without recalculating styles. Typically call `#requestUpdateLayout` instead to\n     * only update once per animation frame.\n     */\n    #updateLayout() {\n        // This runs often, so keep it as fast as possible! Avoid all unecessary updates.\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            this.style.height = inputStyle.height;\n            this.style.width = inputStyle.width;\n            // Immediately re-adjust for browser inconsistencies in scrollbar handling, if necessary\n            if (input.clientHeight !== this.clientHeight)\n                this.style.height = `calc(${inputStyle.height} + ${input.clientHeight - this.clientHeight}px)`;\n            if (input.clientWidth !== this.clientWidth)\n                this.style.width = `calc(${inputStyle.width} + ${input.clientWidth - this.clientWidth}px)`;\n            // Position on top of the input\n            const inputRect = input.getBoundingClientRect();\n            const cloneRect = this.getBoundingClientRect();\n            this.#xOffset = this.#xOffset + inputRect.left - cloneRect.left;\n            this.#yOffset = this.#yOffset + inputRect.top - cloneRect.top;\n            this.style.transform = `translate(${this.#xOffset}px, ${this.#yOffset}px)`;\n            this.scrollTop = input.scrollTop;\n            this.scrollLeft = input.scrollLeft;\n            this.dispatchEvent(new InputStyleCloneUpdateEvent());\n        });\n    }\n    #isLayoutUpdating = false;\n    /** Request a layout update. Will only happen once per animation frame, to avoid unecessary updates. */\n    #requestUpdateLayout() {\n        if (this.#isLayoutUpdating)\n            return;\n        this.#isLayoutUpdating = true;\n        requestAnimationFrame(() => {\n            this.#updateLayout();\n            this.#isLayoutUpdating = false;\n        });\n    }\n    /** Update the styles of the clone based on the styles of the input, then request a layout update. */\n    #updateStyles() {\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            for (const prop of propertiesToCopy)\n                this.style[prop] = inputStyle[prop];\n            this.#requestUpdateLayout();\n        });\n    }\n    /**\n     * Update the text content of the clone based on the text content of the input. Triggers a layout update in case the\n     * text update caused scrolling.\n     */\n    #updateText() {\n        this.#usingInput((input) => {\n            this.textContent = input.value;\n            // This is often unecessary on a pure text update, but text updates could potentially cause layout updates like\n            // scrolling or resizing. And we run the update on _every frame_ when scrolling, so this isn't that expensive.\n            // We don't requestUpdateLayout here because this one should happen synchronously, so that clients can react\n            // within their own `input` event handlers.\n            this.#updateLayout();\n        });\n    }\n    #onInput = () => this.#updateText();\n    #onDocumentScrollOrResize = (event) => {\n        this.#usingInput((input) => {\n            if (event.target === document ||\n                event.target === window ||\n                (event.target instanceof Node && event.target.contains(input)))\n                this.#requestUpdateLayout();\n        });\n    };\n}\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nconst propertiesToCopy = [\n    // RTL / vertical writing modes support:\n    \"direction\",\n    \"writingMode\",\n    \"unicodeBidi\",\n    \"textOrientation\",\n    \"boxSizing\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\",\n];\n// Inspired by https://github.com/github/catalyst/blob/dc284dcf4f82329a9cac5c867462a8fa529b6c40/src/register.ts\ntry {\n    customElements.define(\"input-style-clone\", InputStyleCloneElement);\n}\ncatch (e) {\n    // Throws DOMException with NotSupportedError if already defined\n    if (!(e instanceof DOMException && e.name === \"NotSupportedError\"))\n        throw e;\n}\n\nclass InputRange {\n    #inputElement;\n    #startOffset;\n    #endOffset;\n    /**\n     * Construct a new `InputRange`.\n     * @param element The target input element that contains the content for the range.\n     * @param startOffset The inclusive 0-based start index for the range. Will be adjusted to fit in the input contents.\n     * @param endOffset The exclusive 0-based end index for the range. Will be adjusted to fit in the input contents.\n     */\n    constructor(element, startOffset = 0, endOffset = startOffset) {\n        this.#inputElement = element;\n        this.#startOffset = startOffset;\n        this.#endOffset = endOffset;\n    }\n    /**\n     * Create a new range from the current user selection. If the input is not focused, the range will just be the start\n     * of the input (offsets `0` to `0`).\n     *\n     * This can be used to get the caret coordinates: if the resulting range is `collapsed`, the location of the\n     * `getBoundingClientRect` will be the location of the caret caret (note, however, that the width will be `0` in\n     * this case).\n     */\n    static fromSelection(input) {\n        const { selectionStart, selectionEnd } = input;\n        return new InputRange(input, selectionStart ?? undefined, selectionEnd ?? undefined);\n    }\n    /** Returns true if the start is equal to the end of this range. */\n    get collapsed() {\n        return this.startOffset === this.endOffset;\n    }\n    /** Always returns the containing input element. */\n    get commonAncestorContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get endContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get startContainer() {\n        return this.#inputElement;\n    }\n    get startOffset() {\n        return this.#startOffset;\n    }\n    get endOffset() {\n        return this.#endOffset;\n    }\n    /** Update the inclusive start offset. Will be adjusted to fit within the content size. */\n    setStartOffset(offset) {\n        this.#startOffset = this.#clampOffset(offset);\n    }\n    /** Update the exclusive end offset. Will be adjusted to fit within the content size. */\n    setEndOffset(offset) {\n        this.#endOffset = this.#clampOffset(offset);\n    }\n    /**\n     * Collapse this range to one side.\n     * @param toStart If `true`, will collapse to the start side. Otherwise, will collapse to the end.\n     */\n    collapse(toStart = false) {\n        if (toStart)\n            this.setEndOffset(this.startOffset);\n        else\n            this.setStartOffset(this.endOffset);\n    }\n    /** Returns a `DocumentFragment` containing a new `Text` node containing the content in the range. */\n    cloneContents() {\n        return this.#createCloneRange().cloneContents();\n    }\n    /** Create a copy of this range. */\n    cloneRange() {\n        return new InputRange(this.#inputElement, this.startOffset, this.endOffset);\n    }\n    /**\n     * Obtain one rect that contains the entire contents of the range. If the range spans multiple lines, this box will\n     * contain all pieces of the range but may also contain some space outside the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getBoundingClientRect() {\n        return this.#createCloneRange().getBoundingClientRect();\n    }\n    /**\n     * Obtain the rects that contain contents of this range. If the range spans multiple lines, there will be multiple\n     * bounding boxes. These boxes can be used, for example, to draw a highlight over the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getClientRects() {\n        return this.#createCloneRange().getClientRects();\n    }\n    /** Get the contents of the range as a string. */\n    toString() {\n        return this.#createCloneRange().toString();\n    }\n    /**\n     * Get the underlying `InputStyleClone` instance powering these calculations. This can be used to listen for\n     * updates to trigger layout recalculation.\n     */\n    getStyleClone() {\n        return this.#styleClone;\n    }\n    // --- private ---\n    get #styleClone() {\n        return InputStyleCloneElement.for(this.#inputElement);\n    }\n    get #cloneElement() {\n        return this.#styleClone;\n    }\n    #clampOffset(offset) {\n        return Math.max(0, Math.min(offset, this.#inputElement.value.length));\n    }\n    #createCloneRange() {\n        // It's tempting to create a single Range and reuse it across the lifetime of the class. However, this wouldn't be\n        // accurate because the contents of the input can change and the contents of the range would become stale. So we\n        // must create a new range every time we need it.\n        const range = document.createRange();\n        const textNode = this.#cloneElement.childNodes[0];\n        if (textNode) {\n            range.setStart(textNode, this.startOffset);\n            range.setEnd(textNode, this.endOffset);\n        }\n        return range;\n    }\n}\n\nconst states = new WeakMap();\nclass TextExpander {\n    constructor(expander, input) {\n        this.expander = expander;\n        this.input = input;\n        this.combobox = null;\n        this.menu = null;\n        this.match = null;\n        this.justPasted = false;\n        this.lookBackIndex = 0;\n        this.oninput = this.onInput.bind(this);\n        this.onpaste = this.onPaste.bind(this);\n        this.onkeydown = this.onKeydown.bind(this);\n        this.oncommit = this.onCommit.bind(this);\n        this.onmousedown = this.onMousedown.bind(this);\n        this.onblur = this.onBlur.bind(this);\n        this.interactingWithList = false;\n        input.addEventListener('paste', this.onpaste);\n        input.addEventListener('input', this.oninput);\n        input.addEventListener('keydown', this.onkeydown);\n        input.addEventListener('blur', this.onblur);\n    }\n    destroy() {\n        this.input.removeEventListener('paste', this.onpaste);\n        this.input.removeEventListener('input', this.oninput);\n        this.input.removeEventListener('keydown', this.onkeydown);\n        this.input.removeEventListener('blur', this.onblur);\n    }\n    dismissMenu() {\n        if (this.deactivate()) {\n            this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n        }\n    }\n    activate(match, menu) {\n        var _a, _b;\n        if (this.input !== document.activeElement && this.input !== ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement)) {\n            return;\n        }\n        this.deactivate();\n        this.menu = menu;\n        if (!menu.id)\n            menu.id = `text-expander-${Math.floor(Math.random() * 100000).toString()}`;\n        this.expander.append(menu);\n        this.combobox = new Combobox(this.input, menu);\n        this.expander.dispatchEvent(new Event('text-expander-activate'));\n        this.positionMenu(menu, match.position);\n        this.combobox.start();\n        menu.addEventListener('combobox-commit', this.oncommit);\n        menu.addEventListener('mousedown', this.onmousedown);\n        this.combobox.navigate(1);\n    }\n    positionMenu(menu, position) {\n        const caretRect = new InputRange(this.input, position).getBoundingClientRect();\n        const targetPosition = { left: caretRect.left, top: caretRect.top + caretRect.height };\n        const currentPosition = menu.getBoundingClientRect();\n        const delta = {\n            left: targetPosition.left - currentPosition.left,\n            top: targetPosition.top - currentPosition.top\n        };\n        if (delta.left !== 0 || delta.top !== 0) {\n            const currentStyle = getComputedStyle(menu);\n            menu.style.left = currentStyle.left ? `calc(${currentStyle.left} + ${delta.left}px)` : `${delta.left}px`;\n            menu.style.top = currentStyle.top ? `calc(${currentStyle.top} + ${delta.top}px)` : `${delta.top}px`;\n        }\n    }\n    deactivate() {\n        const menu = this.menu;\n        if (!menu || !this.combobox)\n            return false;\n        this.expander.dispatchEvent(new Event('text-expander-deactivate'));\n        this.menu = null;\n        menu.removeEventListener('combobox-commit', this.oncommit);\n        menu.removeEventListener('mousedown', this.onmousedown);\n        this.combobox.destroy();\n        this.combobox = null;\n        menu.remove();\n        return true;\n    }\n    onCommit({ target }) {\n        var _a;\n        const item = target;\n        if (!(item instanceof HTMLElement))\n            return;\n        if (!this.combobox)\n            return;\n        const match = this.match;\n        if (!match)\n            return;\n        const beginning = this.input.value.substring(0, match.position - match.key.length);\n        const remaining = this.input.value.substring(match.position + match.text.length);\n        const detail = { item, key: match.key, value: null, continue: false };\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-value', { cancelable: true, detail }));\n        if (canceled)\n            return;\n        if (!detail.value)\n            return;\n        let suffix = (_a = this.expander.getAttribute('suffix')) !== null && _a !== void 0 ? _a : ' ';\n        if (detail.continue) {\n            suffix = '';\n        }\n        const value = `${detail.value}${suffix}`;\n        this.input.value = beginning + value + remaining;\n        const cursor = beginning.length + value.length;\n        this.deactivate();\n        this.input.focus({\n            preventScroll: true\n        });\n        this.input.selectionStart = cursor;\n        this.input.selectionEnd = cursor;\n        if (!detail.continue) {\n            this.lookBackIndex = cursor;\n            this.match = null;\n        }\n        this.expander.dispatchEvent(new CustomEvent('text-expander-committed', { cancelable: false, detail: { input: this.input } }));\n    }\n    onBlur() {\n        if (this.interactingWithList) {\n            this.interactingWithList = false;\n            return;\n        }\n        this.deactivate();\n    }\n    onPaste() {\n        this.justPasted = true;\n    }\n    async onInput() {\n        if (this.justPasted) {\n            this.justPasted = false;\n            return;\n        }\n        const match = this.findMatch();\n        if (match) {\n            this.match = match;\n            const menu = await this.notifyProviders(match);\n            if (!this.match)\n                return;\n            if (menu) {\n                this.activate(match, menu);\n            }\n            else {\n                this.deactivate();\n            }\n        }\n        else {\n            this.match = null;\n            this.deactivate();\n        }\n    }\n    findMatch() {\n        const cursor = this.input.selectionEnd || 0;\n        const text = this.input.value;\n        if (cursor <= this.lookBackIndex) {\n            this.lookBackIndex = cursor - 1;\n        }\n        for (const { key, multiWord } of this.expander.keys) {\n            const found = query(text, key, cursor, {\n                multiWord,\n                lookBackIndex: this.lookBackIndex,\n                lastMatchPosition: this.match ? this.match.position : null\n            });\n            if (found) {\n                return { text: found.text, key, position: found.position };\n            }\n        }\n    }\n    async notifyProviders(match) {\n        const providers = [];\n        const provide = (result) => providers.push(result);\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-change', { cancelable: true, detail: { provide, text: match.text, key: match.key } }));\n        if (canceled)\n            return;\n        const all = await Promise.all(providers);\n        const fragments = all.filter(x => x.matched).map(x => x.fragment);\n        return fragments[0];\n    }\n    onMousedown() {\n        this.interactingWithList = true;\n    }\n    onKeydown(event) {\n        if (event.key === 'Escape') {\n            this.match = null;\n            if (this.deactivate()) {\n                this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        }\n    }\n}\nclass TextExpanderElement extends HTMLElement {\n    get keys() {\n        const keysAttr = this.getAttribute('keys');\n        const keys = keysAttr ? keysAttr.split(' ') : [];\n        const multiWordAttr = this.getAttribute('multiword');\n        const multiWord = multiWordAttr ? multiWordAttr.split(' ') : [];\n        const globalMultiWord = multiWord.length === 0 && this.hasAttribute('multiword');\n        return keys.map(key => ({ key, multiWord: globalMultiWord || multiWord.includes(key) }));\n    }\n    set keys(value) {\n        this.setAttribute('keys', value);\n    }\n    connectedCallback() {\n        const input = this.querySelector('input[type=\"text\"], textarea');\n        if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement))\n            return;\n        const state = new TextExpander(this, input);\n        states.set(this, state);\n    }\n    disconnectedCallback() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.destroy();\n        states.delete(this);\n    }\n    dismiss() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.dismissMenu();\n    }\n}\n\nif (!window.customElements.get('text-expander')) {\n    window.TextExpanderElement = TextExpanderElement;\n    window.customElements.define('text-expander', TextExpanderElement);\n}\n\nexport { TextExpanderElement as default };\n","export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n","import ansiRegex from 'ansi-regex';\n\nconst regex = ansiRegex();\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\t// Even though the regex is global, we don't need to reset the `.lastIndex`\n\t// because unlike `.exec()` and `.test()`, `.replace()` does it automatically\n\t// and doing it manually has a performance penalty.\n\treturn string.replace(regex, '');\n}\n","import stripAnsi from 'strip-ansi';\n\nconst segmenter = new Intl.Segmenter();\n\nexport default function stringLength(string, {countAnsiEscapeCodes = false} = {}) {\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tif (!countAnsiEscapeCodes) {\n\t\tstring = stripAnsi(string);\n\t}\n\n\tif (string === '') {\n\t\treturn 0;\n\t}\n\n\tlet length = 0;\n\n\tfor (const _ of segmenter.segment(string)) { // eslint-disable-line no-unused-vars\n\t\tlength++;\n\t}\n\n\treturn length;\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20version='1.0'%20viewBox='0%200%20641%20223'%3e%3cpath%20fill='%23aaa'%20d='M86%20214c-9-1-17-4-24-8l-6-3-5-5-5-4-4-6-4-6-3-8-2-8v-27l2-9%203-9%204-6%204-6%205-5%205-5%207-3%206-4%207-2%207-2%2012-1h12l7%201%208%202%207%204%207%203%205%205%205%204-10%2010-10%209-4-3-10-5-5-1H88l-5%202-6%203-3%204-4%204-2%205-2%206v6l-1%207%201%207%202%207%203%205%202%204%204%203%204%203%205%202%206%202h9l10-1%205-2%206-3v-16H91v-27h59v54l-1%203-2%203-5%204-4%204-5%203-5%202-8%202-8%202-10%201H92l-6-1zm266-62V91h34v46h44V91h34v121h-34v-46h-44v46h-34v-61zm-182-1V90h34v121h-34v-60zm59-1V90h35l36%201%205%202c3%200%208%202%2010%204l5%202%204%205%205%204%203%207%203%207%201%2013v13l-4%206-3%207-4%204-5%205-5%202-5%203-6%202-5%201-18%201h-18v32h-34v-61zm67-2%203-2%202-4%202-5v-5l-2-4-2-4-3-2-3-3h-30v31h30l3-2zm226%2039v-24l-8-12-18-28a1751%201751%200%200%200-20-31v-2h39l7%2012%2012%2021%206%209%2013-21%2013-21h38v2l-41%2061-7%2010v48h-34v-24zM109%2066l-4-1-5-5-5-4-1-5-3-9v-5l1-5c2-7%203-10%208-15l4-4%207-2%207-2h7l6%201%205%202%205%202%203%204%204%203%202%206%202%205v13l-2%205-2%206-4%204-3%203-5%202-4%202-9%201h-9l-5-2zm22-11%204-2%203-4%202-5V34l-2-4-2-4-3-2-4-3-5-1h-6l-4%202-5%202-2%204-3%205-1%203v4l1%205%202%205%202%202%205%203%204%202h10l4-2zM37%2039V11h33l3%201%203%202%204%203%203%203%201%205%201%204v5l-1%204-3%204-3%205-4%201-3%202-11%201H49v16H37V39zm31%200%203-2%201-2%201-2v-4l-1-3-3-2-2-2H49v18h15l4-1zm107%2025a512%20512%200%200%200-19-53h14l4%2014%206%2019%201%204%201-1%207-19%205-17h9l6%2019%207%2018v-1l2-6%205-17%204-13h14v1l-4%2012-16%2041v2h-5l-5-1-6-15-6-15-1%201-3%207-6%2015-2%208h-11l-1-3zm74-25V11h42v11h-29v2l-1%205v4h29v11h-28v11h2l15%201h13v11h-43V39zm55%200V11h33l5%203%205%202%202%204%202%205v10l-2%203-1%204-5%203-5%203%205%205%208%2010%203%204h-14l-7-9-8-10h-9v19h-12V39zm33-3%202-3v-6l-3-3-2-3h-18v16h1v1h17l2-2zm26%203V11h42v11h-29l-1%206v5h29v11h-28v5l-1%205%201%201v1h30v11h-43V39zm54%200V11h17l18%201%204%202%205%203%202%204%203%204%202%206%201%206v5c-1%206-3%2012-6%2015l-3%204-5%203-5%202-17%201h-16V39zm33%2014%205-5%202-3v-6l-1-6-1-3-1-3-4-3-3-2h-5l-6-1-3%201h-3v34h9l8-1%203-2zm50-14V11h34l5%202%204%202%202%203%202%203v9l-2%202-3%204-1%201%203%203%203%204%201%203%201%204-1%204-1%204-3%203-3%203-5%201-5%201h-31V39zm34%2015%202-1v-6l-2-2-2-2h-20v13h20l2-2zm-3-22%204-2v-6l-2-1-2-2h-19v12h16l4-1zm42%2024V45l-6-9-11-17-5-8h15l4%208%207%2011%202%203%207-11%207-11h14l-11%2016-11%2017v23h-12V56z'/%3e%3c/svg%3e\"","import './compose.css';\r\nimport '@github/text-expander-element';\r\n\r\nimport { msg, plural, t, Trans } from '@lingui/macro';\r\nimport { useLingui } from '@lingui/react';\r\nimport { MenuItem } from '@szhsin/react-menu';\r\nimport { deepEqual } from 'fast-equals';\r\nimport Fuse from 'fuse.js';\r\nimport { forwardRef, memo } from 'preact/compat';\r\nimport {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from 'preact/hooks';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport stringLength from 'string-length';\r\n// import { detectAll } from 'tinyld/light';\r\nimport { uid } from 'uid/single';\r\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\r\nimport useResizeObserver from 'use-resize-observer';\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport poweredByGiphyURL from '../assets/powered-by-giphy.svg';\r\n\r\nimport Menu2 from '../components/menu2';\r\nimport supportedLanguages from '../data/status-supported-languages';\r\nimport urlRegex from '../data/url-regex';\r\nimport { api } from '../utils/api';\r\nimport db from '../utils/db';\r\nimport emojifyText from '../utils/emojify-text';\r\nimport i18nDuration from '../utils/i18n-duration';\r\nimport isRTL from '../utils/is-rtl';\r\nimport localeMatch from '../utils/locale-match';\r\nimport localeCode2Text from '../utils/localeCode2Text';\r\nimport mem from '../utils/mem';\r\nimport openCompose from '../utils/open-compose';\r\nimport pmem from '../utils/pmem';\r\nimport prettyBytes from '../utils/pretty-bytes';\r\nimport { fetchRelationships } from '../utils/relationships';\r\nimport shortenNumber from '../utils/shorten-number';\r\nimport showToast from '../utils/show-toast';\r\nimport states, { saveStatus } from '../utils/states';\r\nimport store from '../utils/store';\r\nimport {\r\n  getCurrentAccount,\r\n  getCurrentAccountNS,\r\n  getCurrentInstance,\r\n  getCurrentInstanceConfiguration,\r\n} from '../utils/store-utils';\r\nimport supports from '../utils/supports';\r\nimport useCloseWatcher from '../utils/useCloseWatcher';\r\nimport useInterval from '../utils/useInterval';\r\nimport visibilityIconsMap from '../utils/visibility-icons-map';\r\n\r\nimport AccountBlock from './account-block';\r\n// import Avatar from './avatar';\r\nimport Icon from './icon';\r\nimport Loader from './loader';\r\nimport Modal from './modal';\r\nimport Status from './status';\r\n\r\nconst {\r\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\r\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\r\n} = import.meta.env;\r\n\r\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\r\n  const [code, common, native] = l;\r\n  acc[code] = {\r\n    common,\r\n    native,\r\n  };\r\n  return acc;\r\n}, {});\r\n\r\n/* NOTES:\r\n  - Max character limit includes BOTH status text and Content Warning text\r\n*/\r\n\r\nconst expiryOptions = {\r\n  300: i18nDuration(5, 'minute'),\r\n  1_800: i18nDuration(30, 'minute'),\r\n  3_600: i18nDuration(1, 'hour'),\r\n  21_600: i18nDuration(6, 'hour'),\r\n  86_400: i18nDuration(1, 'day'),\r\n  259_200: i18nDuration(3, 'day'),\r\n  604_800: i18nDuration(1, 'week'),\r\n};\r\nconst expirySeconds = Object.keys(expiryOptions);\r\nconst oneDay = 24 * 60 * 60;\r\n\r\nconst expiresInFromExpiresAt = (expiresAt) => {\r\n  if (!expiresAt) return oneDay;\r\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\r\n  return expirySeconds.find((s) => s >= delta) || oneDay;\r\n};\r\n\r\nconst menu = document.createElement('ul');\r\nmenu.role = 'listbox';\r\nmenu.className = 'text-expander-menu';\r\n\r\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\r\nconst windowMargin = 16;\r\nconst observer = new IntersectionObserver((entries) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting) {\r\n      const { left, width } = entry.boundingClientRect;\r\n      const { innerWidth } = window;\r\n      if (left + width > innerWidth) {\r\n        const insetInlineStart = isRTL() ? 'right' : 'left';\r\n        menu.style[insetInlineStart] = innerWidth - width - windowMargin + 'px';\r\n      }\r\n    }\r\n  });\r\n});\r\nobserver.observe(menu);\r\n\r\nconst DEFAULT_LANG = localeMatch(\r\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\r\n  supportedLanguages.map((l) => l[0]),\r\n  'en',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\r\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\r\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\r\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\r\nfunction countableText(inputText) {\r\n  return inputText\r\n    .replace(urlRegexObj, urlPlaceholder)\r\n    .replace(usernameRegex, '$1@$3');\r\n}\r\n\r\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\r\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\r\nconst MENTION_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\r\n  'uig',\r\n);\r\n\r\n// AI-generated, all other regexes are too complicated\r\nconst HASHTAG_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\r\n  'ig',\r\n);\r\n\r\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\r\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\r\nconst SCAN_RE = new RegExp(\r\n  `(^|[^=\\\\/\\\\w])(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\r\n  'g',\r\n);\r\n\r\nconst segmenter = new Intl.Segmenter();\r\nfunction escapeHTML(text) {\r\n  return text\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&apos;');\r\n}\r\nfunction highlightText(text, { maxCharacters = Infinity }) {\r\n  // Exceeded characters limit\r\n  const { composerCharacterCount } = states;\r\n  if (composerCharacterCount > maxCharacters) {\r\n    // Highlight exceeded characters\r\n    let withinLimitHTML = '',\r\n      exceedLimitHTML = '';\r\n    const htmlSegments = segmenter.segment(text);\r\n    for (const { segment, index } of htmlSegments) {\r\n      if (index < maxCharacters) {\r\n        withinLimitHTML += segment;\r\n      } else {\r\n        exceedLimitHTML += segment;\r\n      }\r\n    }\r\n    if (exceedLimitHTML) {\r\n      exceedLimitHTML =\r\n        '<mark class=\"compose-highlight-exceeded\">' +\r\n        escapeHTML(exceedLimitHTML) +\r\n        '</mark>';\r\n    }\r\n    return escapeHTML(withinLimitHTML) + exceedLimitHTML;\r\n  }\r\n\r\n  return escapeHTML(text)\r\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\r\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\r\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\r\n    .replace(\r\n      SCAN_RE,\r\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\r\n    ); // Emoji shortcodes\r\n}\r\n\r\n// const rtf = new Intl.RelativeTimeFormat();\r\nconst RTF = mem((locale) => new Intl.RelativeTimeFormat(locale || undefined));\r\nconst LF = mem((locale) => new Intl.ListFormat(locale || undefined));\r\n\r\nconst CUSTOM_EMOJIS_COUNT = 100;\r\n\r\nconst ADD_LABELS = {\r\n  media: msg`Add media`,\r\n  customEmoji: msg`Add custom emoji`,\r\n  gif: msg`Add GIF`,\r\n  poll: msg`Add poll`,\r\n};\r\n\r\nfunction Compose({\r\n  onClose,\r\n  replyToStatus,\r\n  editStatus,\r\n  draftStatus,\r\n  standalone,\r\n  hasOpener,\r\n}) {\r\n  const { i18n, _ } = useLingui();\r\n  const rtf = RTF(i18n.locale);\r\n  const lf = LF(i18n.locale);\r\n\r\n  console.warn('RENDER COMPOSER');\r\n  const { masto, instance } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const UID = useRef(draftStatus?.uid || uid());\r\n  console.log('Compose UID', UID.current);\r\n\r\n  const currentAccount = getCurrentAccount();\r\n  const currentAccountInfo = currentAccount.info;\r\n\r\n  const configuration = getCurrentInstanceConfiguration();\r\n  console.log('⚙️ Configuration', configuration);\r\n\r\n  const {\r\n    statuses: {\r\n      maxCharacters,\r\n      maxMediaAttachments, // Beware: it can be undefined!\r\n      charactersReservedPerUrl,\r\n    } = {},\r\n    mediaAttachments: {\r\n      supportedMimeTypes,\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    } = {},\r\n    polls: {\r\n      maxOptions,\r\n      maxCharactersPerOption,\r\n      maxExpiration,\r\n      minExpiration,\r\n    } = {},\r\n  } = configuration || {};\r\n\r\n  const textareaRef = useRef();\r\n  const spoilerTextRef = useRef();\r\n  const [visibility, setVisibility] = useState('public');\r\n  const [sensitive, setSensitive] = useState(false);\r\n  const [language, setLanguage] = useState(\r\n    store.session.get('currentLanguage') || DEFAULT_LANG,\r\n  );\r\n  const prevLanguage = useRef(language);\r\n  const [mediaAttachments, setMediaAttachments] = useState([]);\r\n  const [poll, setPoll] = useState(null);\r\n\r\n  const prefs = store.account.get('preferences') || {};\r\n\r\n  const oninputTextarea = () => {\r\n    if (!textareaRef.current) return;\r\n    textareaRef.current.dispatchEvent(new Event('input'));\r\n  };\r\n  const focusTextarea = () => {\r\n    setTimeout(() => {\r\n      if (!textareaRef.current) return;\r\n      // status starts with newline, focus on first position\r\n      if (draftStatus?.status?.startsWith?.('\\n')) {\r\n        textareaRef.current.selectionStart = 0;\r\n        textareaRef.current.selectionEnd = 0;\r\n      }\r\n      console.debug('FOCUS textarea');\r\n      textareaRef.current?.focus();\r\n    }, 300);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (replyToStatus) {\r\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\r\n      if (spoilerText && spoilerTextRef.current) {\r\n        spoilerTextRef.current.value = spoilerText;\r\n      }\r\n      const mentions = new Set([\r\n        replyToStatus.account.acct,\r\n        ...replyToStatus.mentions.map((m) => m.acct),\r\n      ]);\r\n      const allMentions = [...mentions].filter(\r\n        (m) => m !== currentAccountInfo.acct,\r\n      );\r\n      if (allMentions.length > 0) {\r\n        textareaRef.current.value = `${allMentions\r\n          .map((m) => `@${m}`)\r\n          .join(' ')} `;\r\n        oninputTextarea();\r\n      }\r\n      focusTextarea();\r\n      setVisibility(\r\n        visibility === 'public' && prefs['posting:default:visibility']\r\n          ? prefs['posting:default:visibility'].toLowerCase()\r\n          : visibility,\r\n      );\r\n      setLanguage(\r\n        language ||\r\n          prefs['posting:default:language']?.toLowerCase() ||\r\n          DEFAULT_LANG,\r\n      );\r\n      setSensitive(sensitive && !!spoilerText);\r\n    } else if (editStatus) {\r\n      const { visibility, language, sensitive, poll, mediaAttachments } =\r\n        editStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      setUIState('loading');\r\n      (async () => {\r\n        try {\r\n          const statusSource = await masto.v1.statuses\r\n            .$select(editStatus.id)\r\n            .source.fetch();\r\n          console.log({ statusSource });\r\n          const { text, spoilerText } = statusSource;\r\n          textareaRef.current.value = text;\r\n          textareaRef.current.dataset.source = text;\r\n          oninputTextarea();\r\n          focusTextarea();\r\n          spoilerTextRef.current.value = spoilerText;\r\n          setVisibility(visibility);\r\n          setLanguage(\r\n            language ||\r\n              prefs['posting:default:language']?.toLowerCase() ||\r\n              DEFAULT_LANG,\r\n          );\r\n          setSensitive(sensitive);\r\n          if (composablePoll) setPoll(composablePoll);\r\n          setMediaAttachments(mediaAttachments);\r\n          setUIState('default');\r\n        } catch (e) {\r\n          console.error(e);\r\n          alert(e?.reason || e);\r\n          setUIState('error');\r\n        }\r\n      })();\r\n    } else {\r\n      focusTextarea();\r\n      console.log('Apply prefs', prefs);\r\n      if (prefs['posting:default:visibility']) {\r\n        setVisibility(prefs['posting:default:visibility'].toLowerCase());\r\n      }\r\n      if (prefs['posting:default:language']) {\r\n        setLanguage(prefs['posting:default:language'].toLowerCase());\r\n      }\r\n      if (prefs['posting:default:sensitive']) {\r\n        setSensitive(!!prefs['posting:default:sensitive']);\r\n      }\r\n    }\r\n    if (draftStatus) {\r\n      const {\r\n        status,\r\n        spoilerText,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      } = draftStatus;\r\n      const composablePoll = !!poll?.options && {\r\n        ...poll,\r\n        options: poll.options.map((o) => o?.title || o),\r\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\r\n      };\r\n      textareaRef.current.value = status;\r\n      oninputTextarea();\r\n      focusTextarea();\r\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\r\n      if (visibility) setVisibility(visibility);\r\n      setLanguage(\r\n        language ||\r\n          prefs['posting:default:language']?.toLowerCase() ||\r\n          DEFAULT_LANG,\r\n      );\r\n      if (sensitive !== null) setSensitive(sensitive);\r\n      if (composablePoll) setPoll(composablePoll);\r\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\r\n    }\r\n  }, [draftStatus, editStatus, replyToStatus]);\r\n\r\n  const formRef = useRef();\r\n\r\n  const beforeUnloadCopy = t`You have unsaved changes. Discard this post?`;\r\n  const canClose = () => {\r\n    const { value, dataset } = textareaRef.current;\r\n\r\n    // check if loading\r\n    if (uiState === 'loading') {\r\n      console.log('canClose', { uiState });\r\n      return false;\r\n    }\r\n\r\n    // check for status and media attachments\r\n    const hasValue = (value || '')\r\n      .trim()\r\n      .replace(/^\\p{White_Space}+|\\p{White_Space}+$/gu, '');\r\n    const hasMediaAttachments = mediaAttachments.length > 0;\r\n    if (!hasValue && !hasMediaAttachments) {\r\n      console.log('canClose', { value, mediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if all media attachments have IDs\r\n    const hasIDMediaAttachments =\r\n      mediaAttachments.length > 0 &&\r\n      mediaAttachments.every((media) => media.id);\r\n    if (hasIDMediaAttachments) {\r\n      console.log('canClose', { hasIDMediaAttachments });\r\n      return true;\r\n    }\r\n\r\n    // check if status contains only \"@acct\", if replying\r\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\r\n    const hasOnlyAcct =\r\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\r\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\r\n    if (!isSelf && hasOnlyAcct) {\r\n      console.log('canClose', { isSelf, hasOnlyAcct });\r\n      return true;\r\n    }\r\n\r\n    // check if status is same with source\r\n    const sameWithSource = value === dataset?.source;\r\n    if (sameWithSource) {\r\n      console.log('canClose', { sameWithSource });\r\n      return true;\r\n    }\r\n\r\n    console.log('canClose', {\r\n      value,\r\n      hasMediaAttachments,\r\n      hasIDMediaAttachments,\r\n      poll,\r\n      isSelf,\r\n      hasOnlyAcct,\r\n      sameWithSource,\r\n      uiState,\r\n    });\r\n\r\n    return false;\r\n  };\r\n\r\n  const confirmClose = () => {\r\n    if (!canClose()) {\r\n      const yes = confirm(beforeUnloadCopy);\r\n      return yes;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Show warning if user tries to close window with unsaved changes\r\n    const handleBeforeUnload = (e) => {\r\n      if (!canClose()) {\r\n        e.preventDefault();\r\n        e.returnValue = beforeUnloadCopy;\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleBeforeUnload, {\r\n      capture: true,\r\n    });\r\n    return () =>\r\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\r\n        capture: true,\r\n      });\r\n  }, []);\r\n\r\n  const getCharCount = () => {\r\n    const { value } = textareaRef.current;\r\n    const { value: spoilerText } = spoilerTextRef.current;\r\n    return stringLength(countableText(value)) + stringLength(spoilerText);\r\n  };\r\n  const updateCharCount = () => {\r\n    const count = getCharCount();\r\n    states.composerCharacterCount = count;\r\n  };\r\n  useEffect(updateCharCount, []);\r\n\r\n  const supportsCloseWatcher = window.CloseWatcher;\r\n  const escDownRef = useRef(false);\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      escDownRef.current = true;\r\n      // This won't be true if this event is already handled and not propagated 🤞\r\n    },\r\n    {\r\n      enabled: !supportsCloseWatcher,\r\n      enableOnFormTags: true,\r\n    },\r\n  );\r\n  useHotkeys(\r\n    'esc',\r\n    () => {\r\n      if (!standalone && escDownRef.current && confirmClose()) {\r\n        onClose();\r\n      }\r\n      escDownRef.current = false;\r\n    },\r\n    {\r\n      enabled: !supportsCloseWatcher,\r\n      enableOnFormTags: true,\r\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\r\n      keyup: true,\r\n      ignoreEventWhen: (e) => {\r\n        const modals = document.querySelectorAll('#modal-container > *');\r\n        const hasModal = !!modals;\r\n        const hasOnlyComposer =\r\n          modals.length === 1 && modals[0].querySelector('#compose-container');\r\n        return hasModal && !hasOnlyComposer;\r\n      },\r\n    },\r\n  );\r\n  useCloseWatcher(() => {\r\n    if (!standalone && confirmClose()) {\r\n      onClose();\r\n    }\r\n  }, [standalone, confirmClose, onClose]);\r\n\r\n  const prevBackgroundDraft = useRef({});\r\n  const draftKey = () => {\r\n    const ns = getCurrentAccountNS();\r\n    return `${ns}#${UID.current}`;\r\n  };\r\n  const saveUnsavedDraft = () => {\r\n    // Not enabling this for editing status\r\n    // I don't think this warrant a draft mode for a status that's already posted\r\n    // Maybe it could be a big edit change but it should be rare\r\n    if (editStatus) return;\r\n    if (states.composerState.minimized) return;\r\n    const key = draftKey();\r\n    const backgroundDraft = {\r\n      key,\r\n      replyTo: replyToStatus\r\n        ? {\r\n            /* Smaller payload of replyToStatus. Reasons:\r\n              - No point storing whole thing\r\n              - Could have media attachments\r\n              - Could be deleted/edited later\r\n            */\r\n            id: replyToStatus.id,\r\n            account: {\r\n              id: replyToStatus.account.id,\r\n              username: replyToStatus.account.username,\r\n              acct: replyToStatus.account.acct,\r\n            },\r\n          }\r\n        : null,\r\n      draftStatus: {\r\n        uid: UID.current,\r\n        status: textareaRef.current.value,\r\n        spoilerText: spoilerTextRef.current.value,\r\n        visibility,\r\n        language,\r\n        sensitive,\r\n        poll,\r\n        mediaAttachments,\r\n      },\r\n    };\r\n    if (\r\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\r\n      !canClose()\r\n    ) {\r\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\r\n      db.drafts\r\n        .set(key, {\r\n          ...backgroundDraft,\r\n          state: 'unsaved',\r\n          updatedAt: Date.now(),\r\n        })\r\n        .then(() => {\r\n          console.debug('DRAFT saved', key, backgroundDraft);\r\n        })\r\n        .catch((e) => {\r\n          console.error('DRAFT failed', key, e);\r\n        });\r\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\r\n    }\r\n  };\r\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\r\n  useEffect(() => {\r\n    saveUnsavedDraft();\r\n    // If unmounted, means user discarded the draft\r\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\r\n    return () => {\r\n      db.drafts.del(draftKey());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleItems = (e) => {\r\n      const { items } = e.clipboardData || e.dataTransfer;\r\n      const files = [];\r\n      const unsupportedFiles = [];\r\n      for (let i = 0; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item.kind === 'file') {\r\n          const file = item.getAsFile();\r\n          if (\r\n            supportedMimeTypes !== undefined &&\r\n            !supportedMimeTypes.includes(file.type)\r\n          ) {\r\n            unsupportedFiles.push(file);\r\n          } else {\r\n            files.push(file);\r\n          }\r\n        }\r\n      }\r\n      if (unsupportedFiles.length > 0) {\r\n        alert(\r\n          plural(unsupportedFiles.length, {\r\n            one: `File ${unsupportedFiles[0].name} is not supported.`,\r\n            other: `Files ${lf.format(\r\n              unsupportedFiles.map((f) => f.name),\r\n            )} are not supported.`,\r\n          }),\r\n        );\r\n      }\r\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\r\n        alert(\r\n          plural(maxMediaAttachments, {\r\n            one: 'You can only attach up to 1 file.',\r\n            other: 'You can only attach up to # files.',\r\n          }),\r\n        );\r\n        return;\r\n      }\r\n      console.log({ files });\r\n      if (files.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\r\n        let allowedFiles = files;\r\n        if (maxMediaAttachments !== undefined) {\r\n          const max = maxMediaAttachments - mediaAttachments.length;\r\n          allowedFiles = allowedFiles.slice(0, max);\r\n          if (allowedFiles.length <= 0) {\r\n            alert(\r\n              plural(maxMediaAttachments, {\r\n                one: 'You can only attach up to 1 file.',\r\n                other: 'You can only attach up to # files.',\r\n              }),\r\n            );\r\n            return;\r\n          }\r\n        }\r\n        const mediaFiles = allowedFiles.map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null,\r\n          description: null,\r\n        }));\r\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\r\n      }\r\n    };\r\n    window.addEventListener('paste', handleItems);\r\n    const handleDragover = (e) => {\r\n      // Prevent default if there's files\r\n      if (e.dataTransfer.items.length > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    };\r\n    window.addEventListener('dragover', handleDragover);\r\n    window.addEventListener('drop', handleItems);\r\n    return () => {\r\n      window.removeEventListener('paste', handleItems);\r\n      window.removeEventListener('dragover', handleDragover);\r\n      window.removeEventListener('drop', handleItems);\r\n    };\r\n  }, [mediaAttachments]);\r\n\r\n  const [showMentionPicker, setShowMentionPicker] = useState(false);\r\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\r\n  const [showGIFPicker, setShowGIFPicker] = useState(false);\r\n\r\n  const [autoDetectedLanguages, setAutoDetectedLanguages] = useState(null);\r\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\r\n    const topLanguages = [];\r\n    const restLanguages = [];\r\n    const { contentTranslationHideLanguages = [] } = states.settings;\r\n    supportedLanguages.forEach((l) => {\r\n      const [code] = l;\r\n      if (\r\n        code === language ||\r\n        code === prevLanguage.current ||\r\n        code === DEFAULT_LANG ||\r\n        contentTranslationHideLanguages.includes(code) ||\r\n        (autoDetectedLanguages?.length && autoDetectedLanguages.includes(code))\r\n      ) {\r\n        topLanguages.push(l);\r\n      } else {\r\n        restLanguages.push(l);\r\n      }\r\n    });\r\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\r\n      if (codeA === language) return -1;\r\n      if (codeB === language) return 1;\r\n      return commonA.localeCompare(commonB);\r\n    });\r\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\r\n      commonA.localeCompare(commonB),\r\n    );\r\n    return [topLanguages, restLanguages];\r\n  }, [language, autoDetectedLanguages]);\r\n\r\n  const replyToStatusMonthsAgo = useMemo(\r\n    () =>\r\n      !!replyToStatus?.createdAt &&\r\n      Math.floor(\r\n        (Date.now() - new Date(replyToStatus.createdAt)) /\r\n          (1000 * 60 * 60 * 24 * 30),\r\n      ),\r\n    [replyToStatus],\r\n  );\r\n\r\n  const onMinimize = () => {\r\n    saveUnsavedDraft();\r\n    states.composerState.minimized = true;\r\n  };\r\n\r\n  const gifPickerDisabled =\r\n    uiState === 'loading' ||\r\n    (maxMediaAttachments !== undefined &&\r\n      mediaAttachments.length >= maxMediaAttachments) ||\r\n    !!poll;\r\n\r\n  // If maxOptions is not defined or defined and is greater than 1, show poll button\r\n  const showPollButton = maxOptions == null || maxOptions > 1;\r\n  const pollButtonDisabled =\r\n    uiState === 'loading' || !!poll || !!mediaAttachments.length;\r\n  const onPollButtonClick = () => {\r\n    setPoll({\r\n      options: ['', ''],\r\n      expiresIn: 24 * 60 * 60, // 1 day\r\n      multiple: false,\r\n    });\r\n  };\r\n\r\n  const addSubToolbarRef = useRef();\r\n  const [showAddButton, setShowAddButton] = useState(false);\r\n  useResizeObserver({\r\n    ref: addSubToolbarRef,\r\n    box: 'border-box',\r\n    onResize: ({ width }) => {\r\n      // If scrollable, it's truncated\r\n      const { scrollWidth } = addSubToolbarRef.current;\r\n      const truncated = scrollWidth > width;\r\n      const overTruncated = width < 84; // roughly two buttons width\r\n      setShowAddButton(overTruncated || truncated);\r\n      addSubToolbarRef.current.hidden = overTruncated;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div id=\"compose-container-outer\">\r\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\r\n        <div class=\"compose-top\">\r\n          {currentAccountInfo?.avatarStatic && (\r\n            // <Avatar\r\n            //   url={currentAccountInfo.avatarStatic}\r\n            //   size=\"xl\"\r\n            //   alt={currentAccountInfo.username}\r\n            //   squircle={currentAccountInfo?.bot}\r\n            // />\r\n            <AccountBlock\r\n              account={currentAccountInfo}\r\n              accountInstance={currentAccount.instanceURL}\r\n              hideDisplayName\r\n              useAvatarStatic\r\n            />\r\n          )}\r\n          {!standalone ? (\r\n            <span class=\"compose-controls\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"plain4 pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  const newWin = openCompose({\r\n                    editStatus,\r\n                    replyToStatus,\r\n                    draftStatus: {\r\n                      uid: UID.current,\r\n                      status: textareaRef.current.value,\r\n                      spoilerText: spoilerTextRef.current.value,\r\n                      visibility,\r\n                      language,\r\n                      sensitive,\r\n                      poll,\r\n                      mediaAttachments,\r\n                    },\r\n                  });\r\n\r\n                  if (!newWin) {\r\n                    return;\r\n                  }\r\n\r\n                  onClose();\r\n                }}\r\n              >\r\n                <Icon icon=\"popout\" alt={t`Pop out`} />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"plain4 min-button\"\r\n                onClick={onMinimize}\r\n              >\r\n                <Icon icon=\"minimize\" alt={t`Minimize`} />\r\n              </button>{' '}\r\n              <button\r\n                type=\"button\"\r\n                class=\"light close-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  if (confirmClose()) {\r\n                    onClose();\r\n                  }\r\n                }}\r\n              >\r\n                <Icon icon=\"x\" alt={t`Close`} />\r\n              </button>\r\n            </span>\r\n          ) : (\r\n            hasOpener && (\r\n              <button\r\n                type=\"button\"\r\n                class=\"light pop-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\r\n                  // const containNonIDMediaAttachments =\r\n                  //   mediaAttachments.length > 0 &&\r\n                  //   mediaAttachments.some((media) => !media.id);\r\n                  // if (containNonIDMediaAttachments) {\r\n                  //   const yes = confirm(\r\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\r\n                  //   );\r\n                  //   if (!yes) {\r\n                  //     return;\r\n                  //   }\r\n                  // }\r\n\r\n                  if (!window.opener) {\r\n                    alert(t`Looks like you closed the parent window.`);\r\n                    return;\r\n                  }\r\n\r\n                  if (window.opener.__STATES__.showCompose) {\r\n                    if (window.opener.__STATES__.composerState?.publishing) {\r\n                      alert(\r\n                        t`Looks like you already have a compose field open in the parent window and currently publishing. Please wait for it to be done and try again later.`,\r\n                      );\r\n                      return;\r\n                    }\r\n\r\n                    let confirmText = t`Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?`;\r\n                    const yes = confirm(confirmText);\r\n                    if (!yes) return;\r\n                  }\r\n\r\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\r\n                  //   (media) => media.id,\r\n                  // );\r\n\r\n                  onClose({\r\n                    fn: () => {\r\n                      const passData = {\r\n                        editStatus,\r\n                        replyToStatus,\r\n                        draftStatus: {\r\n                          uid: UID.current,\r\n                          status: textareaRef.current.value,\r\n                          spoilerText: spoilerTextRef.current.value,\r\n                          visibility,\r\n                          language,\r\n                          sensitive,\r\n                          poll,\r\n                          mediaAttachments,\r\n                        },\r\n                      };\r\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\r\n                      if (window.opener.__STATES__.showCompose) {\r\n                        window.opener.__STATES__.showCompose = false;\r\n                        setTimeout(() => {\r\n                          window.opener.__STATES__.showCompose = true;\r\n                        }, 10);\r\n                      } else {\r\n                        window.opener.__STATES__.showCompose = true;\r\n                      }\r\n                      if (window.opener.__STATES__.composerState.minimized) {\r\n                        // Maximize it\r\n                        window.opener.__STATES__.composerState.minimized = false;\r\n                      }\r\n                    },\r\n                  });\r\n                }}\r\n              >\r\n                <Icon icon=\"popin\" alt={t`Pop in`} />\r\n              </button>\r\n            )\r\n          )}\r\n        </div>\r\n        {!!replyToStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={replyToStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend reply-to\">\r\n              {replyToStatusMonthsAgo > 0 ? (\r\n                <Trans>\r\n                  Replying to @\r\n                  {replyToStatus.account.acct || replyToStatus.account.username}\r\n                  &rsquo;s post (\r\n                  <strong>\r\n                    {rtf.format(-replyToStatusMonthsAgo, 'month')}\r\n                  </strong>\r\n                  )\r\n                </Trans>\r\n              ) : (\r\n                <Trans>\r\n                  Replying to @\r\n                  {replyToStatus.account.acct || replyToStatus.account.username}\r\n                  &rsquo;s post\r\n                </Trans>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {!!editStatus && (\r\n          <div class=\"status-preview\">\r\n            <Status status={editStatus} size=\"s\" previewMode />\r\n            <div class=\"status-preview-legend\">\r\n              <Trans>Editing source post</Trans>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <form\r\n          ref={formRef}\r\n          class={`form-visibility-${visibility}`}\r\n          style={{\r\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\r\n            opacity: uiState === 'loading' ? 0.5 : 1,\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\r\n              formRef.current.dispatchEvent(\r\n                new Event('submit', { cancelable: true }),\r\n              );\r\n            }\r\n          }}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n\r\n            const formData = new FormData(e.target);\r\n            const entries = Object.fromEntries(formData.entries());\r\n            console.log('ENTRIES', entries);\r\n            let { status, visibility, sensitive, spoilerText } = entries;\r\n\r\n            // Pre-cleanup\r\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\r\n\r\n            // Validation\r\n            /* Let the backend validate this\r\n          if (stringLength(status) > maxCharacters) {\r\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\r\n            return;\r\n          }\r\n          if (\r\n            sensitive &&\r\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\r\n          ) {\r\n            alert(\r\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\r\n            );\r\n            return;\r\n          }\r\n          */\r\n            if (poll) {\r\n              if (poll.options.length < 2) {\r\n                alert(t`Poll must have at least 2 options`);\r\n                return;\r\n              }\r\n              if (poll.options.some((option) => option === '')) {\r\n                alert(t`Some poll choices are empty`);\r\n                return;\r\n              }\r\n            }\r\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\r\n\r\n            if (mediaAttachments.length > 0) {\r\n              // If there are media attachments, check if they have no descriptions\r\n              const hasNoDescriptions = mediaAttachments.some(\r\n                (media) => !media.description?.trim?.(),\r\n              );\r\n              if (hasNoDescriptions) {\r\n                const yes = confirm(\r\n                  t`Some media have no descriptions. Continue?`,\r\n                );\r\n                if (!yes) return;\r\n              }\r\n            }\r\n\r\n            // Post-cleanup\r\n            spoilerText = (sensitive && spoilerText) || undefined;\r\n            status = status === '' ? undefined : status;\r\n\r\n            // states.composerState.minimized = true;\r\n            states.composerState.publishing = true;\r\n            setUIState('loading');\r\n            (async () => {\r\n              try {\r\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\r\n                if (mediaAttachments.length > 0) {\r\n                  // Upload media attachments first\r\n                  const mediaPromises = mediaAttachments.map((attachment) => {\r\n                    const { file, description, id } = attachment;\r\n                    console.log('UPLOADING', attachment);\r\n                    if (id) {\r\n                      // If already uploaded\r\n                      return attachment;\r\n                    } else {\r\n                      const params = removeNullUndefined({\r\n                        file,\r\n                        description,\r\n                      });\r\n                      return masto.v2.media.create(params).then((res) => {\r\n                        if (res.id) {\r\n                          attachment.id = res.id;\r\n                        }\r\n                        return res;\r\n                      });\r\n                    }\r\n                  });\r\n                  const results = await Promise.allSettled(mediaPromises);\r\n\r\n                  // If any failed, return\r\n                  if (\r\n                    results.some((result) => {\r\n                      return result.status === 'rejected' || !result.value?.id;\r\n                    })\r\n                  ) {\r\n                    states.composerState.publishing = false;\r\n                    states.composerState.publishingError = true;\r\n                    setUIState('error');\r\n                    // Alert all the reasons\r\n                    results.forEach((result) => {\r\n                      if (result.status === 'rejected') {\r\n                        console.error(result);\r\n                        alert(result.reason || t`Attachment #${i} failed`);\r\n                      }\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  console.log({ results, mediaAttachments });\r\n                }\r\n\r\n                /* NOTE:\r\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\r\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\r\n\r\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\r\n              */\r\n                let params = {\r\n                  status,\r\n                  // spoilerText,\r\n                  spoiler_text: spoilerText,\r\n                  language,\r\n                  sensitive,\r\n                  poll,\r\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\r\n                  media_ids: mediaAttachments.map(\r\n                    (attachment) => attachment.id,\r\n                  ),\r\n                };\r\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\r\n                  params.media_attributes = mediaAttachments.map(\r\n                    (attachment) => {\r\n                      return {\r\n                        id: attachment.id,\r\n                        description: attachment.description,\r\n                        // focus\r\n                        // thumbnail\r\n                      };\r\n                    },\r\n                  );\r\n                } else if (!editStatus) {\r\n                  params.visibility = visibility;\r\n                  // params.inReplyToId = replyToStatus?.id || undefined;\r\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\r\n                }\r\n                params = removeNullUndefined(params);\r\n                console.log('POST', params);\r\n\r\n                let newStatus;\r\n                if (editStatus) {\r\n                  newStatus = await masto.v1.statuses\r\n                    .$select(editStatus.id)\r\n                    .update(params);\r\n                  saveStatus(newStatus, instance, {\r\n                    skipThreading: true,\r\n                  });\r\n                } else {\r\n                  try {\r\n                    newStatus = await masto.v1.statuses.create(params, {\r\n                      requestInit: {\r\n                        headers: {\r\n                          'Idempotency-Key': UID.current,\r\n                        },\r\n                      },\r\n                    });\r\n                  } catch (_) {\r\n                    // If idempotency key fails, try again without it\r\n                    newStatus = await masto.v1.statuses.create(params);\r\n                  }\r\n                }\r\n                states.composerState.minimized = false;\r\n                states.composerState.publishing = false;\r\n                setUIState('default');\r\n\r\n                // Close\r\n                onClose({\r\n                  // type: post, reply, edit\r\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\r\n                  newStatus,\r\n                  instance,\r\n                });\r\n              } catch (e) {\r\n                states.composerState.publishing = false;\r\n                states.composerState.publishingError = true;\r\n                console.error(e);\r\n                alert(e?.reason || e);\r\n                setUIState('error');\r\n              }\r\n            })();\r\n          }}\r\n        >\r\n          <div class=\"toolbar stretch\">\r\n            <input\r\n              ref={spoilerTextRef}\r\n              type=\"text\"\r\n              name=\"spoilerText\"\r\n              placeholder={t`Content warning`}\r\n              disabled={uiState === 'loading'}\r\n              class=\"spoiler-text-field\"\r\n              lang={language}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              style={{\r\n                opacity: sensitive ? 1 : 0,\r\n                pointerEvents: sensitive ? 'auto' : 'none',\r\n              }}\r\n              onInput={() => {\r\n                updateCharCount();\r\n              }}\r\n            />\r\n            <label\r\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\r\n              title={t`Content warning or sensitive media`}\r\n            >\r\n              <input\r\n                name=\"sensitive\"\r\n                type=\"checkbox\"\r\n                checked={sensitive}\r\n                disabled={uiState === 'loading'}\r\n                onChange={(e) => {\r\n                  const sensitive = e.target.checked;\r\n                  setSensitive(sensitive);\r\n                  if (sensitive) {\r\n                    spoilerTextRef.current?.focus();\r\n                  } else {\r\n                    textareaRef.current?.focus();\r\n                  }\r\n                }}\r\n              />\r\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n            </label>{' '}\r\n            <label\r\n              class={`toolbar-button ${\r\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\r\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\r\n              title={visibility}\r\n            >\r\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\r\n              <select\r\n                name=\"visibility\"\r\n                value={visibility}\r\n                onChange={(e) => {\r\n                  setVisibility(e.target.value);\r\n                }}\r\n                disabled={uiState === 'loading' || !!editStatus}\r\n                dir=\"auto\"\r\n              >\r\n                <option value=\"public\">\r\n                  <Trans>Public</Trans>\r\n                </option>\r\n                {(supports('@pleroma/local-visibility-post') ||\r\n                  supports('@akkoma/local-visibility-post')) && (\r\n                  <option value=\"local\">\r\n                    <Trans>Local</Trans>\r\n                  </option>\r\n                )}\r\n                <option value=\"unlisted\">\r\n                  <Trans>Unlisted</Trans>\r\n                </option>\r\n                <option value=\"private\">\r\n                  <Trans>Followers only</Trans>\r\n                </option>\r\n                <option value=\"direct\">\r\n                  <Trans>Private mention</Trans>\r\n                </option>\r\n              </select>\r\n            </label>{' '}\r\n          </div>\r\n          <Textarea\r\n            ref={textareaRef}\r\n            placeholder={\r\n              replyToStatus\r\n                ? t`Post your reply`\r\n                : editStatus\r\n                  ? t`Edit your post`\r\n                  : t`What are you doing?`\r\n            }\r\n            required={mediaAttachments?.length === 0}\r\n            disabled={uiState === 'loading'}\r\n            lang={language}\r\n            onInput={() => {\r\n              updateCharCount();\r\n            }}\r\n            maxCharacters={maxCharacters}\r\n            performSearch={(params) => {\r\n              const { type, q, limit } = params;\r\n              if (type === 'accounts') {\r\n                return masto.v1.accounts.search.list({\r\n                  q,\r\n                  limit,\r\n                  resolve: false,\r\n                });\r\n              }\r\n              return masto.v2.search.fetch(params);\r\n            }}\r\n            onTrigger={(action) => {\r\n              if (action?.name === 'custom-emojis') {\r\n                setShowEmoji2Picker({\r\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\r\n                });\r\n              } else if (action?.name === 'mention') {\r\n                setShowMentionPicker({\r\n                  defaultSearchTerm: action?.defaultSearchTerm || null,\r\n                });\r\n              } else if (\r\n                action?.name === 'auto-detect-language' &&\r\n                action?.languages\r\n              ) {\r\n                setAutoDetectedLanguages(action.languages);\r\n              }\r\n            }}\r\n          />\r\n          {mediaAttachments?.length > 0 && (\r\n            <div class=\"media-attachments\">\r\n              {mediaAttachments.map((attachment, i) => {\r\n                const { id, file } = attachment;\r\n                const fileID = file?.size + file?.type + file?.name;\r\n                return (\r\n                  <MediaAttachment\r\n                    key={id || fileID || i}\r\n                    attachment={attachment}\r\n                    disabled={uiState === 'loading'}\r\n                    lang={language}\r\n                    onDescriptionChange={(value) => {\r\n                      setMediaAttachments((attachments) => {\r\n                        const newAttachments = [...attachments];\r\n                        newAttachments[i] = {\r\n                          ...newAttachments[i],\r\n                          description: value,\r\n                        };\r\n                        return newAttachments;\r\n                      });\r\n                    }}\r\n                    onRemove={() => {\r\n                      setMediaAttachments((attachments) => {\r\n                        return attachments.filter((_, j) => j !== i);\r\n                      });\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n              <label class=\"media-sensitive\">\r\n                <input\r\n                  name=\"sensitive\"\r\n                  type=\"checkbox\"\r\n                  checked={sensitive}\r\n                  disabled={uiState === 'loading'}\r\n                  onChange={(e) => {\r\n                    const sensitive = e.target.checked;\r\n                    setSensitive(sensitive);\r\n                  }}\r\n                />{' '}\r\n                <span>\r\n                  <Trans>Mark media as sensitive</Trans>\r\n                </span>{' '}\r\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\r\n              </label>\r\n            </div>\r\n          )}\r\n          {!!poll && (\r\n            <Poll\r\n              lang={language}\r\n              maxOptions={maxOptions}\r\n              maxExpiration={maxExpiration}\r\n              minExpiration={minExpiration}\r\n              maxCharactersPerOption={maxCharactersPerOption}\r\n              poll={poll}\r\n              disabled={uiState === 'loading'}\r\n              onInput={(poll) => {\r\n                if (poll) {\r\n                  const newPoll = { ...poll };\r\n                  setPoll(newPoll);\r\n                } else {\r\n                  setPoll(null);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          <div class=\"toolbar compose-footer\">\r\n            <span class=\"add-toolbar-button-group spacer\">\r\n              {showAddButton && (\r\n                <Menu2\r\n                  portal={{\r\n                    target: document.body,\r\n                  }}\r\n                  containerProps={{\r\n                    style: {\r\n                      zIndex: 1001,\r\n                    },\r\n                  }}\r\n                  menuButton={({ open }) => (\r\n                    <button\r\n                      type=\"button\"\r\n                      class={`toolbar-button add-button ${\r\n                        open ? 'active' : ''\r\n                      }`}\r\n                    >\r\n                      <Icon icon=\"plus\" title={t`Add`} />\r\n                    </button>\r\n                  )}\r\n                >\r\n                  <MenuItem className=\"compose-menu-add-media\">\r\n                    <label class=\"compose-menu-add-media-field\">\r\n                      <FilePickerInput\r\n                        hidden\r\n                        supportedMimeTypes={supportedMimeTypes}\r\n                        maxMediaAttachments={maxMediaAttachments}\r\n                        mediaAttachments={mediaAttachments}\r\n                        disabled={\r\n                          uiState === 'loading' ||\r\n                          mediaAttachments.length >= maxMediaAttachments ||\r\n                          !!poll\r\n                        }\r\n                        setMediaAttachments={setMediaAttachments}\r\n                      />\r\n                    </label>\r\n                    <Icon icon=\"media\" /> <span>{_(ADD_LABELS.media)}</span>\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={() => {\r\n                      setShowEmoji2Picker(true);\r\n                    }}\r\n                  >\r\n                    <Icon icon=\"emoji2\" />{' '}\r\n                    <span>{_(ADD_LABELS.customEmoji)}</span>\r\n                  </MenuItem>\r\n                  {!!states.settings.composerGIFPicker && (\r\n                    <MenuItem\r\n                      disabled={gifPickerDisabled}\r\n                      onClick={() => {\r\n                        setShowGIFPicker(true);\r\n                      }}\r\n                    >\r\n                      <span class=\"icon icon-gif\" role=\"img\" />\r\n                      <span>{_(ADD_LABELS.gif)}</span>\r\n                    </MenuItem>\r\n                  )}\r\n                  <MenuItem\r\n                    disabled={pollButtonDisabled}\r\n                    onClick={onPollButtonClick}\r\n                  >\r\n                    <Icon icon=\"poll\" /> <span>{_(ADD_LABELS.poll)}</span>\r\n                  </MenuItem>\r\n                </Menu2>\r\n              )}\r\n              <span class=\"add-sub-toolbar-button-group\" ref={addSubToolbarRef}>\r\n                <label class=\"toolbar-button\">\r\n                  <FilePickerInput\r\n                    supportedMimeTypes={supportedMimeTypes}\r\n                    maxMediaAttachments={maxMediaAttachments}\r\n                    mediaAttachments={mediaAttachments}\r\n                    disabled={\r\n                      uiState === 'loading' ||\r\n                      mediaAttachments.length >= maxMediaAttachments ||\r\n                      !!poll\r\n                    }\r\n                    setMediaAttachments={setMediaAttachments}\r\n                  />\r\n                  <Icon icon=\"media\" alt={_(ADD_LABELS.media)} />\r\n                </label>\r\n                {/* <button\r\n                type=\"button\"\r\n                class=\"toolbar-button\"\r\n                disabled={uiState === 'loading'}\r\n                onClick={() => {\r\n                  setShowMentionPicker(true);\r\n                }}\r\n              >\r\n                <Icon icon=\"at\" />\r\n              </button> */}\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"toolbar-button\"\r\n                  disabled={uiState === 'loading'}\r\n                  onClick={() => {\r\n                    setShowEmoji2Picker(true);\r\n                  }}\r\n                >\r\n                  <Icon icon=\"emoji2\" alt={_(ADD_LABELS.customEmoji)} />\r\n                </button>\r\n                {!!states.settings.composerGIFPicker && (\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"toolbar-button gif-picker-button\"\r\n                    disabled={gifPickerDisabled}\r\n                    onClick={() => {\r\n                      setShowGIFPicker(true);\r\n                    }}\r\n                  >\r\n                    <span\r\n                      class=\"icon icon-gif\"\r\n                      aria-label={_(ADD_LABELS.gif)}\r\n                    />\r\n                  </button>\r\n                )}\r\n                {}\r\n                {showPollButton && (\r\n                  <>\r\n                    <button\r\n                      type=\"button\"\r\n                      class=\"toolbar-button\"\r\n                      disabled={pollButtonDisabled}\r\n                      onClick={onPollButtonClick}\r\n                    >\r\n                      <Icon icon=\"poll\" alt={_(ADD_LABELS.poll)} />\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </span>\r\n            </span>\r\n            {/* <div class=\"spacer\" /> */}\r\n            {uiState === 'loading' ? (\r\n              <Loader abrupt />\r\n            ) : (\r\n              <CharCountMeter\r\n                maxCharacters={maxCharacters}\r\n                hidden={uiState === 'loading'}\r\n              />\r\n            )}\r\n            <label\r\n              class={`toolbar-button ${\r\n                language !== prevLanguage.current ||\r\n                (autoDetectedLanguages?.length &&\r\n                  !autoDetectedLanguages.includes(language))\r\n                  ? 'highlight'\r\n                  : ''\r\n              }`}\r\n            >\r\n              <span class=\"icon-text\">\r\n                {supportedLanguagesMap[language]?.native}\r\n              </span>\r\n              <select\r\n                name=\"language\"\r\n                value={language}\r\n                onChange={(e) => {\r\n                  const { value } = e.target;\r\n                  setLanguage(value || DEFAULT_LANG);\r\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\r\n                }}\r\n                disabled={uiState === 'loading'}\r\n                dir=\"auto\"\r\n              >\r\n                {topSupportedLanguages.map(([code, common, native]) => {\r\n                  const commonText = localeCode2Text({\r\n                    code,\r\n                    fallback: common,\r\n                  });\r\n                  const showCommon = commonText !== native;\r\n                  return (\r\n                    <option value={code} key={code}>\r\n                      {showCommon ? `${native} - ${commonText}` : commonText}\r\n                    </option>\r\n                  );\r\n                })}\r\n                <hr />\r\n                {restSupportedLanguages.map(([code, common, native]) => {\r\n                  const commonText = localeCode2Text({\r\n                    code,\r\n                    fallback: common,\r\n                  });\r\n                  const showCommon = commonText !== native;\r\n                  return (\r\n                    <option value={code} key={code}>\r\n                      {showCommon ? `${native} - ${commonText}` : commonText}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </label>{' '}\r\n            <button type=\"submit\" disabled={uiState === 'loading'}>\r\n              {replyToStatus\r\n                ? t`Reply`\r\n                : editStatus\r\n                  ? t`Update`\r\n                  : t({\r\n                      message: 'Post',\r\n                      context: 'Submit button in composer',\r\n                    })}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showMentionPicker && (\r\n        <Modal\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowMentionPicker(false);\r\n            }\r\n          }}\r\n        >\r\n          <MentionModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowMentionPicker(false);\r\n            }}\r\n            defaultSearchTerm={showMentionPicker?.defaultSearchTerm}\r\n            onSelect={(socialAddress) => {\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const textBeforeMention = text.slice(0, selectionStart);\r\n              const spaceBeforeMention = textBeforeMention\r\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeMention)\r\n                  ? ''\r\n                  : ' '\r\n                : '';\r\n              const textAfterMention = text.slice(selectionEnd);\r\n              const spaceAfterMention = /^[\\s\\t\\n\\r]/.test(textAfterMention)\r\n                ? ''\r\n                : ' ';\r\n              const newText =\r\n                textBeforeMention +\r\n                spaceBeforeMention +\r\n                '@' +\r\n                socialAddress +\r\n                spaceAfterMention +\r\n                textAfterMention;\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd +\r\n                1 +\r\n                socialAddress.length +\r\n                spaceAfterMention.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {showEmoji2Picker && (\r\n        <Modal\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowEmoji2Picker(false);\r\n            }\r\n          }}\r\n        >\r\n          <CustomEmojisModal\r\n            masto={masto}\r\n            instance={instance}\r\n            onClose={() => {\r\n              setShowEmoji2Picker(false);\r\n            }}\r\n            defaultSearchTerm={showEmoji2Picker?.defaultSearchTerm}\r\n            onSelect={(emojiShortcode) => {\r\n              const textarea = textareaRef.current;\r\n              if (!textarea) return;\r\n              const { selectionStart, selectionEnd } = textarea;\r\n              const text = textarea.value;\r\n              const textBeforeEmoji = text.slice(0, selectionStart);\r\n              const spaceBeforeEmoji = textBeforeEmoji\r\n                ? /[\\s\\t\\n\\r]$/.test(textBeforeEmoji)\r\n                  ? ''\r\n                  : ' '\r\n                : '';\r\n              const textAfterEmoji = text.slice(selectionEnd);\r\n              const spaceAfterEmoji = /^[\\s\\t\\n\\r]/.test(textAfterEmoji)\r\n                ? ''\r\n                : ' ';\r\n              const newText =\r\n                textBeforeEmoji +\r\n                spaceBeforeEmoji +\r\n                emojiShortcode +\r\n                spaceAfterEmoji +\r\n                textAfterEmoji;\r\n              textarea.value = newText;\r\n              textarea.selectionStart = textarea.selectionEnd =\r\n                selectionEnd + emojiShortcode.length + spaceAfterEmoji.length;\r\n              textarea.focus();\r\n              textarea.dispatchEvent(new Event('input'));\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n      {showGIFPicker && (\r\n        <Modal\r\n          onClick={(e) => {\r\n            if (e.target === e.currentTarget) {\r\n              setShowGIFPicker(false);\r\n            }\r\n          }}\r\n        >\r\n          <GIFPickerModal\r\n            onClose={() => setShowGIFPicker(false)}\r\n            onSelect={({ url, type, alt_text }) => {\r\n              console.log('GIF URL', url);\r\n              if (mediaAttachments.length >= maxMediaAttachments) {\r\n                alert(\r\n                  plural(maxMediaAttachments, {\r\n                    one: 'You can only attach up to 1 file.',\r\n                    other: 'You can only attach up to # files.',\r\n                  }),\r\n                );\r\n                return;\r\n              }\r\n              // Download the GIF and insert it as media attachment\r\n              (async () => {\r\n                let theToast;\r\n                try {\r\n                  theToast = showToast({\r\n                    text: t`Downloading GIF…`,\r\n                    duration: -1,\r\n                  });\r\n                  const blob = await fetch(url, {\r\n                    referrerPolicy: 'no-referrer',\r\n                  }).then((res) => res.blob());\r\n                  const file = new File(\r\n                    [blob],\r\n                    type === 'video/mp4' ? 'video.mp4' : 'image.gif',\r\n                    {\r\n                      type,\r\n                    },\r\n                  );\r\n                  const newMediaAttachments = [\r\n                    ...mediaAttachments,\r\n                    {\r\n                      file,\r\n                      type,\r\n                      size: file.size,\r\n                      id: null,\r\n                      description: alt_text || '',\r\n                    },\r\n                  ];\r\n                  setMediaAttachments(newMediaAttachments);\r\n                  theToast?.hideToast?.();\r\n                } catch (err) {\r\n                  console.error(err);\r\n                  theToast?.hideToast?.();\r\n                  showToast(t`Failed to download GIF`);\r\n                }\r\n              })();\r\n            }}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FilePickerInput({\r\n  hidden,\r\n  supportedMimeTypes,\r\n  maxMediaAttachments,\r\n  mediaAttachments,\r\n  disabled = false,\r\n  setMediaAttachments,\r\n}) {\r\n  return (\r\n    <input\r\n      type=\"file\"\r\n      hidden={hidden}\r\n      accept={supportedMimeTypes?.join(',')}\r\n      multiple={\r\n        maxMediaAttachments === undefined ||\r\n        maxMediaAttachments - mediaAttachments >= 2\r\n      }\r\n      disabled={disabled}\r\n      onChange={(e) => {\r\n        const files = e.target.files;\r\n        if (!files) return;\r\n\r\n        const mediaFiles = Array.from(files).map((file) => ({\r\n          file,\r\n          type: file.type,\r\n          size: file.size,\r\n          url: URL.createObjectURL(file),\r\n          id: null, // indicate uploaded state\r\n          description: null,\r\n        }));\r\n        console.log('MEDIA ATTACHMENTS', files, mediaFiles);\r\n\r\n        // Validate max media attachments\r\n        if (mediaAttachments.length + mediaFiles.length > maxMediaAttachments) {\r\n          alert(\r\n            plural(maxMediaAttachments, {\r\n              one: 'You can only attach up to 1 file.',\r\n              other: 'You can only attach up to # files.',\r\n            }),\r\n          );\r\n        } else {\r\n          setMediaAttachments((attachments) => {\r\n            return attachments.concat(mediaFiles);\r\n          });\r\n        }\r\n        // Reset\r\n        e.target.value = '';\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction autoResizeTextarea(textarea) {\r\n  if (!textarea) return;\r\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\r\n  if (offsetHeight < window.innerHeight) {\r\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\r\n    // No idea why it does that, will re-investigate in far future\r\n    const offset = offsetHeight - clientHeight;\r\n    const height = value ? scrollHeight + offset + 'px' : null;\r\n    textarea.style.height = height;\r\n  }\r\n}\r\n\r\nasync function _getCustomEmojis(instance, masto) {\r\n  const emojis = await masto.v1.customEmojis.list();\r\n  const visibleEmojis = emojis.filter((e) => e.visibleInPicker);\r\n  const searcher = new Fuse(visibleEmojis, {\r\n    keys: ['shortcode'],\r\n    findAllMatches: true,\r\n  });\r\n  return [visibleEmojis, searcher];\r\n}\r\nconst getCustomEmojis = pmem(_getCustomEmojis, {\r\n  // Limit by time to reduce memory usage\r\n  // Cached by instance\r\n  matchesArg: (cacheKeyArg, keyArg) => cacheKeyArg.instance === keyArg.instance,\r\n  maxAge: 30 * 60 * 1000, // 30 minutes\r\n});\r\n\r\nconst detectLangs = async (text) => {\r\n  const { detectAll } = await import('tinyld/light');\r\n  const langs = detectAll(text);\r\n  if (langs?.length) {\r\n    // return max 2\r\n    return langs.slice(0, 2).map((lang) => lang.lang);\r\n  }\r\n  return null;\r\n};\r\n\r\nconst Textarea = forwardRef((props, ref) => {\r\n  const { masto, instance } = api();\r\n  const [text, setText] = useState(ref.current?.value || '');\r\n  const {\r\n    maxCharacters,\r\n    performSearch = () => {},\r\n    onTrigger = () => {},\r\n    ...textareaProps\r\n  } = props;\r\n  // const snapStates = useSnapshot(states);\r\n  // const charCount = snapStates.composerCharacterCount;\r\n\r\n  // const customEmojis = useRef();\r\n  const searcherRef = useRef();\r\n  useEffect(() => {\r\n    getCustomEmojis(instance, masto)\r\n      .then((r) => {\r\n        const [emojis, searcher] = r;\r\n        searcherRef.current = searcher;\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  }, []);\r\n\r\n  const textExpanderRef = useRef();\r\n  const textExpanderTextRef = useRef('');\r\n  useEffect(() => {\r\n    let handleChange, handleValue, handleCommited;\r\n    if (textExpanderRef.current) {\r\n      handleChange = (e) => {\r\n        // console.log('text-expander-change', e);\r\n        const { key, provide, text } = e.detail;\r\n        textExpanderTextRef.current = text;\r\n\r\n        if (text === '') {\r\n          provide(\r\n            Promise.resolve({\r\n              matched: false,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        if (key === ':') {\r\n          // const emojis = customEmojis.current.filter((emoji) =>\r\n          //   emoji.shortcode.startsWith(text),\r\n          // );\r\n          // const emojis = filterShortcodes(customEmojis.current, text);\r\n          const results = searcherRef.current?.search(text, {\r\n            limit: 5,\r\n          });\r\n          let html = '';\r\n          results.forEach(({ item: emoji }) => {\r\n            const { shortcode, url } = emoji;\r\n            html += `\r\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\r\n                <img src=\"${encodeHTML(\r\n                  url,\r\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \r\n                ${encodeHTML(shortcode)}\r\n              </li>`;\r\n          });\r\n          html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">${t`More…`}</li>`;\r\n          // console.log({ emojis, html });\r\n          menu.innerHTML = html;\r\n          provide(\r\n            Promise.resolve({\r\n              matched: results.length > 0,\r\n              fragment: menu,\r\n            }),\r\n          );\r\n          return;\r\n        }\r\n\r\n        const type = {\r\n          '@': 'accounts',\r\n          '#': 'hashtags',\r\n        }[key];\r\n        provide(\r\n          new Promise((resolve) => {\r\n            const searchResults = performSearch({\r\n              type,\r\n              q: text,\r\n              limit: 5,\r\n            });\r\n            searchResults.then((value) => {\r\n              if (text !== textExpanderTextRef.current) {\r\n                return;\r\n              }\r\n              console.log({ value, type, v: value[type] });\r\n              const results = value[type] || value;\r\n              console.log('RESULTS', value, results);\r\n              let html = '';\r\n              results.forEach((result) => {\r\n                const {\r\n                  name,\r\n                  avatarStatic,\r\n                  displayName,\r\n                  username,\r\n                  acct,\r\n                  emojis,\r\n                  history,\r\n                } = result;\r\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\r\n                // const item = menuItem.cloneNode();\r\n                if (acct) {\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\r\n                      <span class=\"avatar\">\r\n                        <img src=\"${encodeHTML(\r\n                          avatarStatic,\r\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\r\n                      </span>\r\n                      <span>\r\n                        <b>${displayNameWithEmoji || username}</b>\r\n                        <br><span class=\"bidi-isolate\">@${encodeHTML(\r\n                          acct,\r\n                        )}</span>\r\n                      </span>\r\n                    </li>\r\n                  `;\r\n                } else {\r\n                  const total = history?.reduce?.(\r\n                    (acc, cur) => acc + +cur.uses,\r\n                    0,\r\n                  );\r\n                  html += `\r\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\r\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\r\n                      ${\r\n                        total\r\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\r\n                          : ''\r\n                      }\r\n                    </li>\r\n                  `;\r\n                }\r\n              });\r\n              if (type === 'accounts') {\r\n                html += `<li role=\"option\" data-value=\"\" data-more=\"${text}\">${t`More…`}</li>`;\r\n              }\r\n              menu.innerHTML = html;\r\n              console.log('MENU', results, menu);\r\n              resolve({\r\n                matched: results.length > 0,\r\n                fragment: menu,\r\n              });\r\n            });\r\n          }),\r\n        );\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-change',\r\n        handleChange,\r\n      );\r\n\r\n      handleValue = (e) => {\r\n        const { key, item } = e.detail;\r\n        const { value, more } = item.dataset;\r\n        if (key === ':') {\r\n          e.detail.value = value ? `:${value}:` : '​'; // zero-width space\r\n          if (more) {\r\n            // Prevent adding space after the above value\r\n            e.detail.continue = true;\r\n\r\n            setTimeout(() => {\r\n              onTrigger?.({\r\n                name: 'custom-emojis',\r\n                defaultSearchTerm: more,\r\n              });\r\n            }, 300);\r\n          }\r\n        } else if (key === '@') {\r\n          e.detail.value = value ? `@${value} ` : '​'; // zero-width space\r\n          if (more) {\r\n            e.detail.continue = true;\r\n            setTimeout(() => {\r\n              onTrigger?.({\r\n                name: 'mention',\r\n                defaultSearchTerm: more,\r\n              });\r\n            }, 300);\r\n          }\r\n        } else {\r\n          e.detail.value = `${key}${value}`;\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-value',\r\n        handleValue,\r\n      );\r\n\r\n      handleCommited = (e) => {\r\n        const { input } = e.detail;\r\n        setText(input.value);\r\n        // fire input event\r\n        if (ref.current) {\r\n          const event = new Event('input', { bubbles: true });\r\n          ref.current.dispatchEvent(event);\r\n        }\r\n      };\r\n\r\n      textExpanderRef.current.addEventListener(\r\n        'text-expander-committed',\r\n        handleCommited,\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (textExpanderRef.current) {\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-change',\r\n          handleChange,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-value',\r\n          handleValue,\r\n        );\r\n        textExpanderRef.current.removeEventListener(\r\n          'text-expander-committed',\r\n          handleCommited,\r\n        );\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Resize observer for textarea\r\n    const textarea = ref.current;\r\n    if (!textarea) return;\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      // Get height of textarea, set height to textExpander\r\n      if (textExpanderRef.current) {\r\n        const { height } = textarea.getBoundingClientRect();\r\n        textExpanderRef.current.style.height = height + 'px';\r\n      }\r\n    });\r\n    resizeObserver.observe(textarea);\r\n  }, []);\r\n\r\n  const slowHighlightPerf = useRef(0); // increment if slow\r\n  const composeHighlightRef = useRef();\r\n  const throttleHighlightText = useThrottledCallback((text) => {\r\n    if (!composeHighlightRef.current) return;\r\n    if (slowHighlightPerf.current > 3) {\r\n      // After 3 times of lag, disable highlighting\r\n      composeHighlightRef.current.innerHTML = '';\r\n      composeHighlightRef.current = null; // Destroy the whole thing\r\n      throttleHighlightText?.cancel?.();\r\n      return;\r\n    }\r\n    let start;\r\n    let end;\r\n    if (slowHighlightPerf.current <= 3) start = Date.now();\r\n    composeHighlightRef.current.innerHTML =\r\n      highlightText(text, {\r\n        maxCharacters,\r\n      }) + '\\n';\r\n    if (slowHighlightPerf.current <= 3) end = Date.now();\r\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\r\n    if (start && end && end - start > 50) {\r\n      // if slow, increment\r\n      slowHighlightPerf.current++;\r\n    }\r\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\r\n  }, 500);\r\n\r\n  const debouncedAutoDetectLanguage = useDebouncedCallback(() => {\r\n    // Make use of the highlightRef to get the DOM\r\n    // Clone the dom\r\n    const dom = composeHighlightRef.current?.cloneNode(true);\r\n    if (!dom) return;\r\n    // Remove mark\r\n    dom.querySelectorAll('mark').forEach((mark) => {\r\n      mark.remove();\r\n    });\r\n    const text = dom.innerText?.trim();\r\n    if (!text) return;\r\n    (async () => {\r\n      const langs = await detectLangs(text);\r\n      if (langs?.length) {\r\n        onTrigger?.({\r\n          name: 'auto-detect-language',\r\n          languages: langs,\r\n        });\r\n      }\r\n    })();\r\n  }, 2000);\r\n\r\n  return (\r\n    <text-expander\r\n      ref={textExpanderRef}\r\n      keys=\"@ # :\"\r\n      class=\"compose-field-container\"\r\n    >\r\n      <textarea\r\n        class=\"compose-field\"\r\n        autoCapitalize=\"sentences\"\r\n        autoComplete=\"on\"\r\n        autoCorrect=\"on\"\r\n        spellCheck=\"true\"\r\n        dir=\"auto\"\r\n        rows=\"6\"\r\n        cols=\"50\"\r\n        {...textareaProps}\r\n        ref={ref}\r\n        name=\"status\"\r\n        value={text}\r\n        onKeyDown={(e) => {\r\n          // Get line before cursor position after pressing 'Enter'\r\n          const { key, target } = e;\r\n          if (key === 'Enter' && !(e.ctrlKey || e.metaKey)) {\r\n            try {\r\n              const { value, selectionStart } = target;\r\n              const textBeforeCursor = value.slice(0, selectionStart);\r\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\r\n              if (lastLine) {\r\n                // If line starts with \"- \" or \"12. \"\r\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\r\n                  // insert \"- \" at cursor position\r\n                  const [_, preSpaces, bullet, postSpaces, anything] =\r\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\r\n                  if (anything) {\r\n                    e.preventDefault();\r\n                    const [number] = bullet.match(/\\d+/) || [];\r\n                    const newBullet = number ? `${+number + 1}.` : '-';\r\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\r\n                    target.setRangeText(text, selectionStart, selectionStart);\r\n                    const pos = selectionStart + text.length;\r\n                    target.setSelectionRange(pos, pos);\r\n                  } else {\r\n                    // trim the line before the cursor, then insert new line\r\n                    const pos = selectionStart - lastLine.length;\r\n                    target.setRangeText('', pos, selectionStart);\r\n                  }\r\n                  autoResizeTextarea(target);\r\n                  target.dispatchEvent(new Event('input'));\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // silent fail\r\n              console.error(e);\r\n            }\r\n          }\r\n          if (composeHighlightRef.current) {\r\n            composeHighlightRef.current.scrollTop = target.scrollTop;\r\n          }\r\n        }}\r\n        onInput={(e) => {\r\n          const { target } = e;\r\n          // Replace zero-width space\r\n          const text = target.value.replace(/\\u200b/g, '');\r\n          setText(text);\r\n          autoResizeTextarea(target);\r\n          props.onInput?.(e);\r\n          throttleHighlightText(text);\r\n          debouncedAutoDetectLanguage();\r\n        }}\r\n        style={{\r\n          width: '100%',\r\n          height: '4em',\r\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\r\n        }}\r\n        onScroll={(e) => {\r\n          if (composeHighlightRef.current) {\r\n            const { scrollTop } = e.target;\r\n            composeHighlightRef.current.scrollTop = scrollTop;\r\n          }\r\n        }}\r\n      />\r\n      <div\r\n        ref={composeHighlightRef}\r\n        class=\"compose-highlight\"\r\n        aria-hidden=\"true\"\r\n      />\r\n    </text-expander>\r\n  );\r\n});\r\n\r\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\r\n  const snapStates = useSnapshot(states);\r\n  const charCount = snapStates.composerCharacterCount;\r\n  const leftChars = maxCharacters - charCount;\r\n  if (hidden) {\r\n    return <span class=\"char-counter\" hidden />;\r\n  }\r\n  return (\r\n    <span\r\n      class=\"char-counter\"\r\n      title={`${leftChars}/${maxCharacters}`}\r\n      style={{\r\n        '--percentage': (charCount / maxCharacters) * 100,\r\n      }}\r\n    >\r\n      <meter\r\n        class={`${\r\n          leftChars <= -10\r\n            ? 'explode'\r\n            : leftChars <= 0\r\n              ? 'danger'\r\n              : leftChars <= 20\r\n                ? 'warning'\r\n                : ''\r\n        }`}\r\n        value={charCount}\r\n        max={maxCharacters}\r\n      />\r\n      <span class=\"counter\">{leftChars}</span>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction scaleDimension(matrix, matrixLimit, width, height) {\r\n  // matrix = number of pixels\r\n  // matrixLimit = max number of pixels\r\n  // Calculate new width and height, downsize to within the limit, preserve aspect ratio, no decimals\r\n  const scalingFactor = Math.sqrt(matrixLimit / matrix);\r\n  const newWidth = Math.floor(width * scalingFactor);\r\n  const newHeight = Math.floor(height * scalingFactor);\r\n  return { newWidth, newHeight };\r\n}\r\n\r\nfunction MediaAttachment({\r\n  attachment,\r\n  disabled,\r\n  lang,\r\n  onDescriptionChange = () => {},\r\n  onRemove = () => {},\r\n}) {\r\n  const { i18n } = useLingui();\r\n  const [uiState, setUIState] = useState('default');\r\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\r\n  const { type, id, file } = attachment;\r\n  const url = useMemo(\r\n    () => (file ? URL.createObjectURL(file) : attachment.url),\r\n    [file, attachment.url],\r\n  );\r\n  console.log({ attachment });\r\n\r\n  const checkMaxError = !!file?.size;\r\n  const configuration = checkMaxError ? getCurrentInstanceConfiguration() : {};\r\n  const {\r\n    mediaAttachments: {\r\n      imageSizeLimit,\r\n      imageMatrixLimit,\r\n      videoSizeLimit,\r\n      videoMatrixLimit,\r\n      videoFrameRateLimit,\r\n    } = {},\r\n  } = configuration || {};\r\n\r\n  const [maxError, setMaxError] = useState(() => {\r\n    if (!checkMaxError) return null;\r\n    if (\r\n      type.startsWith('image') &&\r\n      imageSizeLimit &&\r\n      file.size > imageSizeLimit\r\n    ) {\r\n      return {\r\n        type: 'imageSizeLimit',\r\n        details: {\r\n          imageSize: file.size,\r\n          imageSizeLimit,\r\n        },\r\n      };\r\n    } else if (\r\n      type.startsWith('video') &&\r\n      videoSizeLimit &&\r\n      file.size > videoSizeLimit\r\n    ) {\r\n      return {\r\n        type: 'videoSizeLimit',\r\n        details: {\r\n          videoSize: file.size,\r\n          videoSizeLimit,\r\n        },\r\n      };\r\n    }\r\n    return null;\r\n  });\r\n\r\n  const [imageMatrix, setImageMatrix] = useState({});\r\n  useEffect(() => {\r\n    if (!checkMaxError || !imageMatrixLimit) return;\r\n    if (imageMatrix?.matrix > imageMatrixLimit) {\r\n      setMaxError({\r\n        type: 'imageMatrixLimit',\r\n        details: {\r\n          imageMatrix: imageMatrix?.matrix,\r\n          imageMatrixLimit,\r\n          width: imageMatrix?.width,\r\n          height: imageMatrix?.height,\r\n        },\r\n      });\r\n    }\r\n  }, [imageMatrix, imageMatrixLimit, checkMaxError]);\r\n\r\n  const [videoMatrix, setVideoMatrix] = useState({});\r\n  useEffect(() => {\r\n    if (!checkMaxError || !videoMatrixLimit) return;\r\n    if (videoMatrix?.matrix > videoMatrixLimit) {\r\n      setMaxError({\r\n        type: 'videoMatrixLimit',\r\n        details: {\r\n          videoMatrix: videoMatrix?.matrix,\r\n          videoMatrixLimit,\r\n          width: videoMatrix?.width,\r\n          height: videoMatrix?.height,\r\n        },\r\n      });\r\n    }\r\n  }, [videoMatrix, videoMatrixLimit, checkMaxError]);\r\n\r\n  const [description, setDescription] = useState(attachment.description);\r\n  const [suffixType, subtype] = type.split('/');\r\n  const debouncedOnDescriptionChange = useDebouncedCallback(\r\n    onDescriptionChange,\r\n    250,\r\n  );\r\n  useEffect(() => {\r\n    debouncedOnDescriptionChange(description);\r\n  }, [description, debouncedOnDescriptionChange]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const textareaRef = useRef(null);\r\n  useEffect(() => {\r\n    let timer;\r\n    if (showModal && textareaRef.current) {\r\n      timer = setTimeout(() => {\r\n        textareaRef.current.focus();\r\n      }, 100);\r\n    }\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [showModal]);\r\n\r\n  const descTextarea = (\r\n    <>\r\n      {!!id && !supportsEdit ? (\r\n        <div class=\"media-desc\">\r\n          <span class=\"tag\">\r\n            <Trans>Uploaded</Trans>\r\n          </span>\r\n          <p title={description}>\r\n            {attachment.description || <i>No description</i>}\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <textarea\r\n          ref={textareaRef}\r\n          value={description || ''}\r\n          lang={lang}\r\n          placeholder={\r\n            {\r\n              image: t`Image description`,\r\n              video: t`Video description`,\r\n              audio: t`Audio description`,\r\n            }[suffixType]\r\n          }\r\n          autoCapitalize=\"sentences\"\r\n          autoComplete=\"on\"\r\n          autoCorrect=\"on\"\r\n          spellCheck=\"true\"\r\n          dir=\"auto\"\r\n          disabled={disabled || uiState === 'loading'}\r\n          class={uiState === 'loading' ? 'loading' : ''}\r\n          maxlength=\"1500\" // Not unicode-aware :(\r\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\r\n          onInput={(e) => {\r\n            const { value } = e.target;\r\n            setDescription(value);\r\n            // debouncedOnDescriptionChange(value);\r\n          }}\r\n        ></textarea>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const toastRef = useRef(null);\r\n  useEffect(() => {\r\n    return () => {\r\n      toastRef.current?.hideToast?.();\r\n    };\r\n  }, []);\r\n\r\n  const maxErrorToast = useRef(null);\r\n\r\n  const maxErrorText = (err) => {\r\n    const { type, details } = err;\r\n    switch (type) {\r\n      case 'imageSizeLimit': {\r\n        const { imageSize, imageSizeLimit } = details;\r\n        return t`File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\r\n          imageSize,\r\n        )} to ${prettyBytes(imageSizeLimit)} or lower.`;\r\n      }\r\n      case 'imageMatrixLimit': {\r\n        const { imageMatrix, imageMatrixLimit, width, height } = details;\r\n        const { newWidth, newHeight } = scaleDimension(\r\n          imageMatrix,\r\n          imageMatrixLimit,\r\n          width,\r\n          height,\r\n        );\r\n        return t`Dimension too large. Uploading might encounter issues. Try reduce dimension from ${i18n.number(\r\n          width,\r\n        )}×${i18n.number(height)}px to ${i18n.number(newWidth)}×${i18n.number(\r\n          newHeight,\r\n        )}px.`;\r\n      }\r\n      case 'videoSizeLimit': {\r\n        const { videoSize, videoSizeLimit } = details;\r\n        return t`File size too large. Uploading might encounter issues. Try reduce the file size from ${prettyBytes(\r\n          videoSize,\r\n        )} to ${prettyBytes(videoSizeLimit)} or lower.`;\r\n      }\r\n      case 'videoMatrixLimit': {\r\n        const { videoMatrix, videoMatrixLimit, width, height } = details;\r\n        const { newWidth, newHeight } = scaleDimension(\r\n          videoMatrix,\r\n          videoMatrixLimit,\r\n          width,\r\n          height,\r\n        );\r\n        return t`Dimension too large. Uploading might encounter issues. Try reduce dimension from ${i18n.number(\r\n          width,\r\n        )}×${i18n.number(height)}px to ${i18n.number(newWidth)}×${i18n.number(\r\n          newHeight,\r\n        )}px.`;\r\n      }\r\n      case 'videoFrameRateLimit': {\r\n        // Not possible to detect this on client-side for now\r\n        return t`Frame rate too high. Uploading might encounter issues.`;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"media-attachment\">\r\n        <div\r\n          class=\"media-preview\"\r\n          tabIndex=\"0\"\r\n          onClick={() => {\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          {suffixType === 'image' ? (\r\n            <img\r\n              src={url}\r\n              alt=\"\"\r\n              onLoad={(e) => {\r\n                if (!checkMaxError) return;\r\n                const { naturalWidth, naturalHeight } = e.target;\r\n                setImageMatrix({\r\n                  matrix: naturalWidth * naturalHeight,\r\n                  width: naturalWidth,\r\n                  height: naturalHeight,\r\n                });\r\n              }}\r\n            />\r\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n            <video\r\n              src={url + '#t=0.1'} // Make Safari show 1st-frame preview\r\n              playsinline\r\n              muted\r\n              disablePictureInPicture\r\n              preload=\"metadata\"\r\n              onLoadedMetadata={(e) => {\r\n                if (!checkMaxError) return;\r\n                const { videoWidth, videoHeight } = e.target;\r\n                if (videoWidth && videoHeight) {\r\n                  setVideoMatrix({\r\n                    matrix: videoWidth * videoHeight,\r\n                    width: videoWidth,\r\n                    height: videoHeight,\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n          ) : suffixType === 'audio' ? (\r\n            <audio src={url} controls />\r\n          ) : null}\r\n        </div>\r\n        {descTextarea}\r\n        <div class=\"media-aside\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"plain close-button\"\r\n            disabled={disabled}\r\n            onClick={onRemove}\r\n          >\r\n            <Icon icon=\"x\" alt={t`Remove`} />\r\n          </button>\r\n          {!!maxError && (\r\n            <button\r\n              type=\"button\"\r\n              class=\"media-error\"\r\n              title={maxErrorText(maxError)}\r\n              onClick={() => {\r\n                if (maxErrorToast.current) {\r\n                  maxErrorToast.current.hideToast();\r\n                }\r\n                maxErrorToast.current = showToast({\r\n                  text: maxErrorText(maxError),\r\n                  duration: 10_000,\r\n                });\r\n              }}\r\n            >\r\n              <Icon icon=\"alert\" alt={t`Error`} />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {showModal && (\r\n        <Modal\r\n          onClose={() => {\r\n            setShowModal(false);\r\n          }}\r\n        >\r\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"sheet-close\"\r\n              onClick={() => {\r\n                setShowModal(false);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" alt={t`Close`} />\r\n            </button>\r\n            <header>\r\n              <h2>\r\n                {\r\n                  {\r\n                    image: t`Edit image description`,\r\n                    video: t`Edit video description`,\r\n                    audio: t`Edit audio description`,\r\n                  }[suffixType]\r\n                }\r\n              </h2>\r\n            </header>\r\n            <main tabIndex=\"-1\">\r\n              <div class=\"media-preview\">\r\n                {suffixType === 'image' ? (\r\n                  <img src={url} alt=\"\" />\r\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\r\n                  <video src={url} playsinline controls />\r\n                ) : suffixType === 'audio' ? (\r\n                  <audio src={url} controls />\r\n                ) : null}\r\n              </div>\r\n              <div class=\"media-form\">\r\n                {descTextarea}\r\n                <footer>\r\n                  {suffixType === 'image' &&\r\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\r\n                    !!states.settings.mediaAltGenerator &&\r\n                    !!IMG_ALT_API_URL && (\r\n                      <Menu2\r\n                        portal={{\r\n                          target: document.body,\r\n                        }}\r\n                        containerProps={{\r\n                          style: {\r\n                            zIndex: 1001,\r\n                          },\r\n                        }}\r\n                        align=\"center\"\r\n                        position=\"anchor\"\r\n                        overflow=\"auto\"\r\n                        menuButton={\r\n                          <button type=\"button\" class=\"plain\">\r\n                            <Icon icon=\"more\" size=\"l\" alt={t`More`} />\r\n                          </button>\r\n                        }\r\n                      >\r\n                        <MenuItem\r\n                          disabled={uiState === 'loading'}\r\n                          onClick={() => {\r\n                            setUIState('loading');\r\n                            toastRef.current = showToast({\r\n                              text: t`Generating description. Please wait…`,\r\n                              duration: -1,\r\n                            });\r\n                            // POST with multipart\r\n                            (async function () {\r\n                              try {\r\n                                const body = new FormData();\r\n                                body.append('image', file);\r\n                                const response = await fetch(IMG_ALT_API_URL, {\r\n                                  method: 'POST',\r\n                                  body,\r\n                                }).then((r) => r.json());\r\n                                if (response.error) {\r\n                                  throw new Error(response.error);\r\n                                }\r\n                                setDescription(response.description);\r\n                              } catch (e) {\r\n                                console.error(e);\r\n                                showToast(\r\n                                  e.message\r\n                                    ? t`Failed to generate description: ${e.message}`\r\n                                    : t`Failed to generate description`,\r\n                                );\r\n                              } finally {\r\n                                setUIState('default');\r\n                                toastRef.current?.hideToast?.();\r\n                              }\r\n                            })();\r\n                          }}\r\n                        >\r\n                          <Icon icon=\"sparkles2\" />\r\n                          {lang && lang !== 'en' ? (\r\n                            <small>\r\n                              <Trans>Generate description…</Trans>\r\n                              <br />\r\n                              (English)\r\n                            </small>\r\n                          ) : (\r\n                            <span>\r\n                              <Trans>Generate description…</Trans>\r\n                            </span>\r\n                          )}\r\n                        </MenuItem>\r\n                        {!!lang && lang !== 'en' && (\r\n                          <MenuItem\r\n                            disabled={uiState === 'loading'}\r\n                            onClick={() => {\r\n                              setUIState('loading');\r\n                              toastRef.current = showToast({\r\n                                text: t`Generating description. Please wait…`,\r\n                                duration: -1,\r\n                              });\r\n                              // POST with multipart\r\n                              (async function () {\r\n                                try {\r\n                                  const body = new FormData();\r\n                                  body.append('image', file);\r\n                                  const params = `?lang=${lang}`;\r\n                                  const response = await fetch(\r\n                                    IMG_ALT_API_URL + params,\r\n                                    {\r\n                                      method: 'POST',\r\n                                      body,\r\n                                    },\r\n                                  ).then((r) => r.json());\r\n                                  if (response.error) {\r\n                                    throw new Error(response.error);\r\n                                  }\r\n                                  setDescription(response.description);\r\n                                } catch (e) {\r\n                                  console.error(e);\r\n                                  showToast(\r\n                                    t`Failed to generate description${\r\n                                      e?.message ? `: ${e.message}` : ''\r\n                                    }`,\r\n                                  );\r\n                                } finally {\r\n                                  setUIState('default');\r\n                                  toastRef.current?.hideToast?.();\r\n                                }\r\n                              })();\r\n                            }}\r\n                          >\r\n                            <Icon icon=\"sparkles2\" />\r\n                            <small>\r\n                              <Trans>Generate description…</Trans>\r\n                              <br />\r\n                              <Trans>\r\n                                ({localeCode2Text(lang)}){' '}\r\n                                <span class=\"more-insignificant\">\r\n                                  — experimental\r\n                                </span>\r\n                              </Trans>\r\n                            </small>\r\n                          </MenuItem>\r\n                        )}\r\n                      </Menu2>\r\n                    )}\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"light block\"\r\n                    onClick={() => {\r\n                      setShowModal(false);\r\n                    }}\r\n                    disabled={uiState === 'loading'}\r\n                  >\r\n                    <Trans>Done</Trans>\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Poll({\r\n  lang,\r\n  poll,\r\n  disabled,\r\n  onInput = () => {},\r\n  maxOptions,\r\n  maxExpiration,\r\n  minExpiration,\r\n  maxCharactersPerOption,\r\n}) {\r\n  const { _ } = useLingui();\r\n  const { options, expiresIn, multiple } = poll;\r\n\r\n  return (\r\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\r\n      <div class=\"poll-choices\">\r\n        {options.map((option, i) => (\r\n          <div class=\"poll-choice\" key={i}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={option}\r\n              disabled={disabled}\r\n              maxlength={maxCharactersPerOption}\r\n              placeholder={t`Choice ${i + 1}`}\r\n              lang={lang}\r\n              spellCheck=\"true\"\r\n              dir=\"auto\"\r\n              onInput={(e) => {\r\n                const { value } = e.target;\r\n                options[i] = value;\r\n                onInput(poll);\r\n              }}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              class=\"plain2 poll-button\"\r\n              disabled={disabled || options.length <= 1}\r\n              onClick={() => {\r\n                options.splice(i, 1);\r\n                onInput(poll);\r\n              }}\r\n            >\r\n              <Icon icon=\"x\" size=\"s\" alt={t`Remove`} />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain2 poll-button\"\r\n          disabled={disabled || options.length >= maxOptions}\r\n          onClick={() => {\r\n            options.push('');\r\n            onInput(poll);\r\n          }}\r\n        >\r\n          +\r\n        </button>{' '}\r\n        <label class=\"multiple-choices\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={multiple}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              poll.multiple = checked;\r\n              onInput(poll);\r\n            }}\r\n          />{' '}\r\n          <Trans>Multiple choices</Trans>\r\n        </label>\r\n        <label class=\"expires-in\">\r\n          <Trans>Duration</Trans>{' '}\r\n          <select\r\n            value={expiresIn}\r\n            disabled={disabled}\r\n            onChange={(e) => {\r\n              const { value } = e.target;\r\n              poll.expiresIn = value;\r\n              onInput(poll);\r\n            }}\r\n          >\r\n            {Object.entries(expiryOptions)\r\n              .filter(([value]) => {\r\n                return value >= minExpiration && value <= maxExpiration;\r\n              })\r\n              .map(([value, label]) => (\r\n                <option value={value} key={value}>\r\n                  {label()}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div class=\"poll-toolbar\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain remove-poll-button\"\r\n          disabled={disabled}\r\n          onClick={() => {\r\n            onInput(null);\r\n          }}\r\n        >\r\n          <Trans>Remove poll</Trans>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterShortcodes(emojis, searchTerm) {\r\n  searchTerm = searchTerm.toLowerCase();\r\n\r\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\r\n  return emojis\r\n    .sort((a, b) => {\r\n      let aLower = a.shortcode.toLowerCase();\r\n      let bLower = b.shortcode.toLowerCase();\r\n\r\n      let aStartsWith = aLower.startsWith(searchTerm);\r\n      let bStartsWith = bLower.startsWith(searchTerm);\r\n      let aContains = aLower.includes(searchTerm);\r\n      let bContains = bLower.includes(searchTerm);\r\n      let bothStartWith = aStartsWith && bStartsWith;\r\n      let bothContain = aContains && bContains;\r\n\r\n      return bothStartWith\r\n        ? a.length - b.length\r\n        : aStartsWith\r\n          ? -1\r\n          : bStartsWith\r\n            ? 1\r\n            : bothContain\r\n              ? a.length - b.length\r\n              : aContains\r\n                ? -1\r\n                : bContains\r\n                  ? 1\r\n                  : 0;\r\n    })\r\n    .slice(0, 5);\r\n}\r\n\r\nfunction encodeHTML(str) {\r\n  return str.replace(/[&<>\"']/g, function (char) {\r\n    return '&#' + char.charCodeAt(0) + ';';\r\n  });\r\n}\r\n\r\nfunction removeNullUndefined(obj) {\r\n  for (let key in obj) {\r\n    if (obj[key] === null || obj[key] === undefined) {\r\n      delete obj[key];\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction MentionModal({\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n  defaultSearchTerm,\r\n}) {\r\n  const { masto } = api();\r\n  const [uiState, setUIState] = useState('default');\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [relationshipsMap, setRelationshipsMap] = useState({});\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const loadRelationships = async (accounts) => {\r\n    if (!accounts?.length) return;\r\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\r\n    if (relationships) {\r\n      setRelationshipsMap({\r\n        ...relationshipsMap,\r\n        ...relationships,\r\n      });\r\n    }\r\n  };\r\n\r\n  const loadAccounts = (term) => {\r\n    if (!term) return;\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const accounts = await masto.v1.accounts.search.list({\r\n          q: term,\r\n          limit: 40,\r\n          resolve: false,\r\n        });\r\n        setAccounts(accounts);\r\n        loadRelationships(accounts);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  };\r\n\r\n  const debouncedLoadAccounts = useDebouncedCallback(loadAccounts, 1000);\r\n\r\n  useEffect(() => {\r\n    loadAccounts();\r\n  }, [loadAccounts]);\r\n\r\n  const inputRef = useRef();\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n      // Put cursor at the end\r\n      if (inputRef.current.value) {\r\n        inputRef.current.selectionStart = inputRef.current.value.length;\r\n        inputRef.current.selectionEnd = inputRef.current.value.length;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (defaultSearchTerm) {\r\n      loadAccounts(defaultSearchTerm);\r\n    }\r\n  }, [defaultSearchTerm]);\r\n\r\n  const selectAccount = (account) => {\r\n    const socialAddress = account.acct;\r\n    onSelect(socialAddress);\r\n    onClose();\r\n  };\r\n\r\n  useHotkeys(\r\n    'enter',\r\n    () => {\r\n      const selectedAccount = accounts[selectedIndex];\r\n      if (selectedAccount) {\r\n        selectAccount(selectedAccount);\r\n      }\r\n    },\r\n    {\r\n      preventDefault: true,\r\n      enableOnFormTags: ['input'],\r\n    },\r\n  );\r\n\r\n  const listRef = useRef();\r\n  useHotkeys(\r\n    'down',\r\n    () => {\r\n      if (selectedIndex < accounts.length - 1) {\r\n        setSelectedIndex(selectedIndex + 1);\r\n      } else {\r\n        setSelectedIndex(0);\r\n      }\r\n      setTimeout(() => {\r\n        const selectedItem = listRef.current.querySelector('.selected');\r\n        if (selectedItem) {\r\n          selectedItem.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n            inline: 'center',\r\n          });\r\n        }\r\n      }, 1);\r\n    },\r\n    {\r\n      preventDefault: true,\r\n      enableOnFormTags: ['input'],\r\n    },\r\n  );\r\n\r\n  useHotkeys(\r\n    'up',\r\n    () => {\r\n      if (selectedIndex > 0) {\r\n        setSelectedIndex(selectedIndex - 1);\r\n      } else {\r\n        setSelectedIndex(accounts.length - 1);\r\n      }\r\n      setTimeout(() => {\r\n        const selectedItem = listRef.current.querySelector('.selected');\r\n        if (selectedItem) {\r\n          selectedItem.scrollIntoView({\r\n            behavior: 'smooth',\r\n            block: 'center',\r\n            inline: 'center',\r\n          });\r\n        }\r\n      }, 1);\r\n    },\r\n    {\r\n      preventDefault: true,\r\n      enableOnFormTags: ['input'],\r\n    },\r\n  );\r\n\r\n  return (\r\n    <div id=\"mention-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" alt={t`Close`} />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            debouncedLoadAccounts.flush?.();\r\n            // const searchTerm = inputRef.current.value;\r\n            // debouncedLoadAccounts(searchTerm);\r\n          }}\r\n        >\r\n          <input\r\n            ref={inputRef}\r\n            required\r\n            type=\"search\"\r\n            class=\"block\"\r\n            placeholder={t`Search accounts`}\r\n            onInput={(e) => {\r\n              const { value } = e.target;\r\n              debouncedLoadAccounts(value);\r\n            }}\r\n            autocomplete=\"off\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            dir=\"auto\"\r\n            defaultValue={defaultSearchTerm || ''}\r\n          />\r\n        </form>\r\n      </header>\r\n      <main>\r\n        {accounts?.length > 0 ? (\r\n          <ul\r\n            ref={listRef}\r\n            class={`accounts-list ${uiState === 'loading' ? 'loading' : ''}`}\r\n          >\r\n            {accounts.map((account, i) => {\r\n              const relationship = relationshipsMap[account.id];\r\n              return (\r\n                <li\r\n                  key={account.id}\r\n                  class={i === selectedIndex ? 'selected' : ''}\r\n                >\r\n                  <AccountBlock\r\n                    avatarSize=\"xxl\"\r\n                    account={account}\r\n                    relationship={relationship}\r\n                    showStats\r\n                    showActivity\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"plain2\"\r\n                    onClick={() => {\r\n                      selectAccount(account);\r\n                    }}\r\n                  >\r\n                    <Icon icon=\"plus\" size=\"xl\" alt={t`Add`} />\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : uiState === 'loading' ? (\r\n          <div class=\"ui-state\">\r\n            <Loader abrupt />\r\n          </div>\r\n        ) : uiState === 'error' ? (\r\n          <div class=\"ui-state\">\r\n            <p>\r\n              <Trans>Error loading accounts</Trans>\r\n            </p>\r\n          </div>\r\n        ) : null}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CustomEmojisModal({\r\n  masto,\r\n  instance,\r\n  onClose = () => {},\r\n  onSelect = () => {},\r\n  defaultSearchTerm,\r\n}) {\r\n  const [uiState, setUIState] = useState('default');\r\n  const customEmojisList = useRef([]);\r\n  const [customEmojis, setCustomEmojis] = useState([]);\r\n  const recentlyUsedCustomEmojis = useMemo(\r\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\r\n  );\r\n  const searcherRef = useRef();\r\n  useEffect(() => {\r\n    setUIState('loading');\r\n    (async () => {\r\n      try {\r\n        const [emojis, searcher] = await getCustomEmojis(instance, masto);\r\n        console.log('emojis', emojis);\r\n        searcherRef.current = searcher;\r\n        setCustomEmojis(emojis);\r\n        setUIState('default');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const customEmojisCatList = useMemo(() => {\r\n    // Group emojis by category\r\n    const emojisCat = {\r\n      '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\r\n        customEmojis.find((e) => e.shortcode === emoji.shortcode),\r\n      ),\r\n    };\r\n    const othersCat = [];\r\n    customEmojis.forEach((emoji) => {\r\n      customEmojisList.current?.push?.(emoji);\r\n      if (!emoji.category) {\r\n        othersCat.push(emoji);\r\n        return;\r\n      }\r\n      if (!emojisCat[emoji.category]) {\r\n        emojisCat[emoji.category] = [];\r\n      }\r\n      emojisCat[emoji.category].push(emoji);\r\n    });\r\n    if (othersCat.length) {\r\n      emojisCat['--others--'] = othersCat;\r\n    }\r\n    return emojisCat;\r\n  }, [customEmojis]);\r\n\r\n  const scrollableRef = useRef();\r\n  const [matches, setMatches] = useState(null);\r\n  const onFind = useCallback(\r\n    (e) => {\r\n      const { value } = e.target;\r\n      if (value) {\r\n        const results = searcherRef.current?.search(value, {\r\n          limit: CUSTOM_EMOJIS_COUNT,\r\n        });\r\n        setMatches(results.map((r) => r.item));\r\n        scrollableRef.current?.scrollTo?.(0, 0);\r\n      } else {\r\n        setMatches(null);\r\n      }\r\n    },\r\n    [customEmojis],\r\n  );\r\n  useEffect(() => {\r\n    if (defaultSearchTerm && customEmojis?.length) {\r\n      onFind({ target: { value: defaultSearchTerm } });\r\n    }\r\n  }, [defaultSearchTerm, onFind, customEmojis]);\r\n\r\n  const onSelectEmoji = useCallback(\r\n    (emoji) => {\r\n      onSelect?.(emoji);\r\n      onClose?.();\r\n\r\n      queueMicrotask(() => {\r\n        let recentlyUsedCustomEmojis =\r\n          store.account.get('recentlyUsedCustomEmojis') || [];\r\n        const recentlyUsedEmojiIndex = recentlyUsedCustomEmojis.findIndex(\r\n          (e) => e.shortcode === emoji.shortcode,\r\n        );\r\n        if (recentlyUsedEmojiIndex !== -1) {\r\n          // Move emoji to index 0\r\n          recentlyUsedCustomEmojis.splice(recentlyUsedEmojiIndex, 1);\r\n          recentlyUsedCustomEmojis.unshift(emoji);\r\n        } else {\r\n          recentlyUsedCustomEmojis.unshift(emoji);\r\n          // Remove unavailable ones\r\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.filter((e) =>\r\n            customEmojisList.current?.find?.(\r\n              (emoji) => emoji.shortcode === e.shortcode,\r\n            ),\r\n          );\r\n          // Limit to 10\r\n          recentlyUsedCustomEmojis = recentlyUsedCustomEmojis.slice(0, 10);\r\n        }\r\n\r\n        // Store back\r\n        store.account.set('recentlyUsedCustomEmojis', recentlyUsedCustomEmojis);\r\n      });\r\n    },\r\n    [onSelect],\r\n  );\r\n\r\n  const inputRef = useRef();\r\n  useEffect(() => {\r\n    if (inputRef.current) {\r\n      inputRef.current.focus();\r\n      // Put cursor at the end\r\n      if (inputRef.current.value) {\r\n        inputRef.current.selectionStart = inputRef.current.value.length;\r\n        inputRef.current.selectionEnd = inputRef.current.value.length;\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" alt={t`Close`} />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <div>\r\n          <b>\r\n            <Trans>Custom emojis</Trans>\r\n          </b>{' '}\r\n          {uiState === 'loading' ? (\r\n            <Loader />\r\n          ) : (\r\n            <small class=\"insignificant\"> • {instance}</small>\r\n          )}\r\n        </div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            const emoji = matches[0];\r\n            if (emoji) {\r\n              onSelectEmoji(`:${emoji.shortcode}:`);\r\n            }\r\n          }}\r\n        >\r\n          <input\r\n            ref={inputRef}\r\n            type=\"search\"\r\n            placeholder={t`Search emoji`}\r\n            onInput={onFind}\r\n            autocomplete=\"off\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            dir=\"auto\"\r\n            defaultValue={defaultSearchTerm || ''}\r\n          />\r\n        </form>\r\n      </header>\r\n      <main ref={scrollableRef}>\r\n        {matches !== null ? (\r\n          <ul class=\"custom-emojis-matches custom-emojis-list\">\r\n            {matches.map((emoji) => (\r\n              <li key={emoji.shortcode} class=\"custom-emojis-match\">\r\n                <CustomEmojiButton\r\n                  emoji={emoji}\r\n                  onClick={() => {\r\n                    onSelectEmoji(`:${emoji.shortcode}:`);\r\n                  }}\r\n                  showCode\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div class=\"custom-emojis-list\">\r\n            {uiState === 'error' && (\r\n              <div class=\"ui-state\">\r\n                <p>\r\n                  <Trans>Error loading custom emojis</Trans>\r\n                </p>\r\n              </div>\r\n            )}\r\n            {uiState === 'default' &&\r\n              Object.entries(customEmojisCatList).map(\r\n                ([category, emojis]) =>\r\n                  !!emojis?.length && (\r\n                    <div class=\"section-container\">\r\n                      <div class=\"section-header\">\r\n                        {{\r\n                          '--recent--': t`Recently used`,\r\n                          '--others--': t`Others`,\r\n                        }[category] || category}\r\n                      </div>\r\n                      <CustomEmojisList\r\n                        emojis={emojis}\r\n                        onSelect={onSelectEmoji}\r\n                      />\r\n                    </div>\r\n                  ),\r\n              )}\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CustomEmojisList = memo(({ emojis, onSelect }) => {\r\n  const { i18n } = useLingui();\r\n  const [max, setMax] = useState(CUSTOM_EMOJIS_COUNT);\r\n  const showMore = emojis.length > max;\r\n  return (\r\n    <section>\r\n      {emojis.slice(0, max).map((emoji) => (\r\n        <CustomEmojiButton\r\n          key={emoji.shortcode}\r\n          emoji={emoji}\r\n          onClick={() => {\r\n            onSelect(`:${emoji.shortcode}:`);\r\n          }}\r\n        />\r\n      ))}\r\n      {showMore && (\r\n        <button\r\n          type=\"button\"\r\n          class=\"plain small\"\r\n          onClick={() => setMax(max + CUSTOM_EMOJIS_COUNT)}\r\n        >\r\n          <Trans>{i18n.number(emojis.length - max)} more…</Trans>\r\n        </button>\r\n      )}\r\n    </section>\r\n  );\r\n});\r\n\r\nconst CustomEmojiButton = memo(({ emoji, onClick, showCode }) => {\r\n  const addEdges = (e) => {\r\n    // Add edge-left or edge-right class based on self position relative to scrollable parent\r\n    // If near left edge, add edge-left, if near right edge, add edge-right\r\n    const buffer = 88;\r\n    const parent = e.currentTarget.closest('main');\r\n    if (parent) {\r\n      const rect = parent.getBoundingClientRect();\r\n      const selfRect = e.currentTarget.getBoundingClientRect();\r\n      const targetClassList = e.currentTarget.classList;\r\n      if (selfRect.left < rect.left + buffer) {\r\n        targetClassList.add('edge-left');\r\n        targetClassList.remove('edge-right');\r\n      } else if (selfRect.right > rect.right - buffer) {\r\n        targetClassList.add('edge-right');\r\n        targetClassList.remove('edge-left');\r\n      } else {\r\n        targetClassList.remove('edge-left', 'edge-right');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"plain4\"\r\n      onClick={onClick}\r\n      data-title={showCode ? undefined : emoji.shortcode}\r\n      onPointerEnter={addEdges}\r\n      onFocus={addEdges}\r\n    >\r\n      <picture>\r\n        {!!emoji.staticUrl && (\r\n          <source\r\n            srcSet={emoji.staticUrl}\r\n            media=\"(prefers-reduced-motion: reduce)\"\r\n          />\r\n        )}\r\n        <img\r\n          className=\"shortcode-emoji\"\r\n          src={emoji.url || emoji.staticUrl}\r\n          alt={emoji.shortcode}\r\n          width=\"24\"\r\n          height=\"24\"\r\n          loading=\"lazy\"\r\n          decoding=\"async\"\r\n        />\r\n      </picture>\r\n      {showCode && (\r\n        <>\r\n          {' '}\r\n          <code>{emoji.shortcode}</code>\r\n        </>\r\n      )}\r\n    </button>\r\n  );\r\n});\r\n\r\nconst GIFS_PER_PAGE = 20;\r\nfunction GIFPickerModal({ onClose = () => {}, onSelect = () => {} }) {\r\n  const { i18n } = useLingui();\r\n  const [uiState, setUIState] = useState('default');\r\n  const [results, setResults] = useState([]);\r\n  const formRef = useRef(null);\r\n  const qRef = useRef(null);\r\n  const currentOffset = useRef(0);\r\n  const scrollableRef = useRef(null);\r\n\r\n  function fetchGIFs({ offset }) {\r\n    console.log('fetchGIFs', { offset });\r\n    if (!qRef.current?.value) return;\r\n    setUIState('loading');\r\n    scrollableRef.current?.scrollTo?.({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth',\r\n    });\r\n    (async () => {\r\n      try {\r\n        const query = {\r\n          api_key: GIPHY_API_KEY,\r\n          q: qRef.current.value,\r\n          rating: 'g',\r\n          limit: GIFS_PER_PAGE,\r\n          bundle: 'messaging_non_clips',\r\n          offset,\r\n          lang: i18n.locale || 'en',\r\n        };\r\n        const response = await fetch(\r\n          'https://api.giphy.com/v1/gifs/search?' + new URLSearchParams(query),\r\n          {\r\n            referrerPolicy: 'no-referrer',\r\n          },\r\n        ).then((r) => r.json());\r\n        currentOffset.current = response.pagination?.offset || 0;\r\n        setResults(response);\r\n        setUIState('results');\r\n      } catch (e) {\r\n        setUIState('error');\r\n        console.error(e);\r\n      }\r\n    })();\r\n  }\r\n\r\n  useEffect(() => {\r\n    qRef.current?.focus();\r\n  }, []);\r\n\r\n  const debouncedOnInput = useDebouncedCallback(() => {\r\n    fetchGIFs({ offset: 0 });\r\n  }, 1000);\r\n\r\n  return (\r\n    <div id=\"gif-picker-sheet\" class=\"sheet\">\r\n      {!!onClose && (\r\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\r\n          <Icon icon=\"x\" alt={t`Close`} />\r\n        </button>\r\n      )}\r\n      <header>\r\n        <form\r\n          ref={formRef}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            fetchGIFs({ offset: 0 });\r\n          }}\r\n        >\r\n          <input\r\n            ref={qRef}\r\n            type=\"search\"\r\n            name=\"q\"\r\n            placeholder={t`Search GIFs`}\r\n            required\r\n            autocomplete=\"off\"\r\n            autocorrect=\"off\"\r\n            autocapitalize=\"off\"\r\n            spellCheck=\"false\"\r\n            dir=\"auto\"\r\n            onInput={debouncedOnInput}\r\n          />\r\n          <input\r\n            type=\"image\"\r\n            class=\"powered-button\"\r\n            src={poweredByGiphyURL}\r\n            width=\"86\"\r\n            height=\"30\"\r\n            alt={t`Powered by GIPHY`}\r\n          />\r\n        </form>\r\n      </header>\r\n      <main ref={scrollableRef} class={uiState === 'loading' ? 'loading' : ''}>\r\n        {uiState === 'default' && (\r\n          <div class=\"ui-state\">\r\n            <p class=\"insignificant\">\r\n              <Trans>Type to search GIFs</Trans>\r\n            </p>\r\n          </div>\r\n        )}\r\n        {uiState === 'loading' && !results?.data?.length && (\r\n          <div class=\"ui-state\">\r\n            <Loader abrupt />\r\n          </div>\r\n        )}\r\n        {results?.data?.length > 0 ? (\r\n          <>\r\n            <ul>\r\n              {results.data.map((gif) => {\r\n                const { id, images, title, alt_text } = gif;\r\n                const {\r\n                  fixed_height_small,\r\n                  fixed_height_downsampled,\r\n                  fixed_height,\r\n                  original,\r\n                } = images;\r\n                const theImage = fixed_height_small?.url\r\n                  ? fixed_height_small\r\n                  : fixed_height_downsampled?.url\r\n                    ? fixed_height_downsampled\r\n                    : fixed_height;\r\n                let { url, webp, width, height } = theImage;\r\n                if (+height > 100) {\r\n                  width = (width / height) * 100;\r\n                  height = 100;\r\n                }\r\n                const urlObj = URL.parse(url);\r\n                const strippedURL = urlObj.origin + urlObj.pathname;\r\n                let strippedWebP;\r\n                if (webp) {\r\n                  const webpObj = URL.parse(webp);\r\n                  strippedWebP = webpObj.origin + webpObj.pathname;\r\n                }\r\n                return (\r\n                  <li key={id}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        const { mp4, url } = original;\r\n                        const theURL = mp4 || url;\r\n                        const urlObj = URL.parse(theURL);\r\n                        const strippedURL = urlObj.origin + urlObj.pathname;\r\n                        onClose();\r\n                        onSelect({\r\n                          url: strippedURL,\r\n                          type: mp4 ? 'video/mp4' : 'image/gif',\r\n                          alt_text: alt_text || title,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <figure\r\n                        style={{\r\n                          '--figure-width': width + 'px',\r\n                          // width: width + 'px'\r\n                        }}\r\n                      >\r\n                        <picture>\r\n                          {strippedWebP && (\r\n                            <source srcset={strippedWebP} type=\"image/webp\" />\r\n                          )}\r\n                          <img\r\n                            src={strippedURL}\r\n                            width={width}\r\n                            height={height}\r\n                            loading=\"lazy\"\r\n                            decoding=\"async\"\r\n                            alt={alt_text}\r\n                            referrerpolicy=\"no-referrer\"\r\n                            onLoad={(e) => {\r\n                              e.target.style.backgroundColor = 'transparent';\r\n                            }}\r\n                          />\r\n                        </picture>\r\n                        <figcaption>{alt_text || title}</figcaption>\r\n                      </figure>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <p class=\"pagination\">\r\n              {results.pagination?.offset > 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"light small\"\r\n                  disabled={uiState === 'loading'}\r\n                  onClick={() => {\r\n                    fetchGIFs({\r\n                      offset: results.pagination?.offset - GIFS_PER_PAGE,\r\n                    });\r\n                  }}\r\n                >\r\n                  <Icon icon=\"chevron-left\" />\r\n                  <span>\r\n                    <Trans>Previous</Trans>\r\n                  </span>\r\n                </button>\r\n              )}\r\n              <span />\r\n              {results.pagination?.offset + results.pagination?.count <\r\n                results.pagination?.total_count && (\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"light small\"\r\n                  disabled={uiState === 'loading'}\r\n                  onClick={() => {\r\n                    fetchGIFs({\r\n                      offset: results.pagination?.offset + GIFS_PER_PAGE,\r\n                    });\r\n                  }}\r\n                >\r\n                  <span>\r\n                    <Trans>Next</Trans>\r\n                  </span>{' '}\r\n                  <Icon icon=\"chevron-right\" />\r\n                </button>\r\n              )}\r\n            </p>\r\n          </>\r\n        ) : (\r\n          uiState === 'results' && (\r\n            <div class=\"ui-state\">\r\n              <p>No results</p>\r\n            </div>\r\n          )\r\n        )}\r\n        {uiState === 'error' && (\r\n          <div class=\"ui-state\">\r\n            <p>\r\n              <Trans>Error loading GIFs</Trans>\r\n            </p>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compose;\r\n"],"file":"assets/compose-ILhEvpwN.js"}